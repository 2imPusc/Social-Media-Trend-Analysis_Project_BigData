comment_id,content_id,platform,content,created_at,score,author,source_name
mod1rjk,1k4ivzj,reddit,"Oh my...

That's certainly something. Tcl is one of the more bizarre languages I've used to any degree, but I also found it quite nice. Or at least, it was bar the RYO-metaprogramming.",2025-04-22 02:00:02,2,11fdriver,programming
modfm0j,1k4ivzj,reddit,"This is one of those things that the closer I look, the worse it gets.

To start with, I already think languages should take a stand and choose *either* keyword args or positional args, (positional for functional style programming, keyword for expression manipulation style).  So the goal to add more types of arguments to a language is one I think is actually bad out of the gate.

But if we suppose that it is our objective, then I would imagine the solution to not involve regex or whatever that quasiquote function is doing.  I suspect the reason they're being used is that we're actually trying to solve several problems at once:

* making tcl proc definitions handle optional parameters at any position
* making tcl procs accept flags at any position
* making tcl accept named parameters

and I think trying to tackle all of this at once has created some of the... bizzareness.

Moreover, it is not at all obvious how the precedence is supposed to work here.  The second example was particularly horrifying to me:
```
p -opt bar -flag 1 a; # => flag=1 opt=bar x=1 args=a
```
why is it not
```
flag=1 opt=bar x=a args=
```
or 
```
flag=1 opt=1 x=bar args=1 a
```
instead?  Well, because you *just have to know* that if the variable has a default parameter, it can't be a flag even if it looks like one.

This would be hell to consume in a library.  I can't even guess if your code handles the following:

```
p -opt -flag;
p -opt -opt -flag -flag;
p -opt -flag -opt 1;
```",2025-04-22 03:24:47,1,Bloaf,programming
mnxttgw,1k2rcre,reddit,">When multiple services share one cache cluster, they compete for the same memory and eviction policies. A heavy workload from Service A can evict critical data for Service B, leading to timeouts or stale responses at peak traffic.

Doesn't this mean service A and B are too dissimilar to share the same cache?

>Now let’s say your cache memory is full, and the eviction policy you set starts triggering. You start seeing your TotalKeys metric going down drastically, you would want to understand immediately which service is affected, but it’s much more complex now.

Why would you start evicting cached items when memory is full? I get not adding more cached items, but wouldn't you want to implement a LRU cache policy so that only old unused items are evicted? And if there are no items old enough items to evict without impacting performance, that means you need to scale your cache, or implement some back off, right?

>On top of that, the affect on multiple services in that case might be even harder to detect, because if we have 5 services that use the cache, and now the eviction policy evicted millions of keys, it might be that one service lost 950k keys, and another lost 50k keys and that makes debugging harder.

Are cache misses not a reported metric in your system? If performance is degrading on a service who's had hot items removed from a cache, knowing the service has a lot of cache misses would indicate this. And of course, why are heavily used cached data being evicted in the first place?

>If a single service would lose 1 million keys the affect on the service would probably be more noticeable on other metrics, but if we just lost 50k maybe that won’t affect the service as much?

Is this a question? I would expect the service that lost 1 million cached items to degrade in performance more than the one that lost 50k, but if that's 50k of heavily used cache entries, then maybe it has a big impact. In either case, you have the metrics on your example system here, what did you see?",2025-04-19 15:23:20,0,Doxterpepper,programming
mmxhtcw,1jycqo2,reddit,"Cool idea, but I can’t come up with any interesting use cases — drop yours in the replies!",2025-04-13 17:49:29,3,viktorzub,programming
mn04d4e,1jycqo2,reddit,"Set up a debezium connector to a MySQL host and stream table x to topic y with schema z, aggregate field xyz using KSql and stream the results to topic abc.",2025-04-14 03:03:14,2,saposmak,programming
mm9q1pg,1jvcvm0,reddit,"Looks cool, I like that it makes this sort of thing more accessible. I setup a C++ OpenGL project to compile shaders and apply them to an MP4 video, it's cool but an absolute ballache. It's good that this is more accessible with this project",2025-04-09 19:59:31,2,AshKetchupppp,programming
mm6ljgy,1jutxee,reddit,"Very interesting for data versioning and such.

How fast would wire it up if the git repo and up being a 1GB, 10GB, 100GB database?",2025-04-09 09:20:09,2,badpotato,programming
mmiqf7f,1jutxee,reddit,"Does it use existing git repos? Can you ""import"" an existing git repo and access its data?",2025-04-11 06:03:35,1,mc_chad,programming
mlvpres,1jtlldw,reddit,"Very, _very_ cool!
Thanks for making and sharing Easylang!",2025-04-07 15:51:18,4,eddavis2,programming
mli8d4n,1jqwx13,reddit,The bots don't even bother anymore.,2025-04-05 07:07:28,2,BloomAppleOrangeSeat,programming
mla4yue,1jqtwzi,reddit,nice ..having a simple example like this is a great reference for other implementors,2025-04-03 22:41:14,1,bzbub2,programming
mk1bkel,1jk9ei0,reddit,"A great article that unfortunately will be overlooked by many due to its verbosity. As a person who does a lot of troubleshooting myself as part of my career, I agree with all of the main points: establish the boundaries of the problem and start hacking big chunks away using something as close to binary search as possible in order to corner the problem efficiently. Don't get caught in a corner yourself - step back and reflect if you are searching in the right places. 

If after doing your best cornering the issue,  you don't have enough expertise to figure it out, do your best to learn from your helpers who have, because in order to solve the problem, you need to understand it first: both the issue and potential reasons causing it. This of course will be the way to develop your own skills",2025-03-27 16:32:24,2,xebecv,programming
moz2vo3,1k7aq02,reddit,Compare two files: janky diff,2025-04-25 14:18:45,1,DrummerOfFenrir,programming
mowpeyx,1k7aq02,reddit,Maybe Jeaye Wilkerson can fix Reddit's jank.,2025-04-25 03:06:39,0,BlueGoliath,programming
mouju92,1k7139l,reddit,"I was hoping you’d touch more on the security of logged content—there may be more than one log targeted at more than one consumer, and depending on the consumer and environment you may need to log more or less. Logs might persist well beyond the lifetime of the application, and they may effectively expose things in cleartext that would otherwise be “locked” behind auth.

E.g., if I’m testing my app, chances are I’ll want to log everything including PII, because it’s (hopefully) not genuine PII, and in any case the same person providing it is likely consuming it. But if I’m not testing, I shouldn’t log anything as private as passwords at all, and decisionmaking on other info may need to be configured per site or per user, or enabled only at the admin’s request.

And while it’s possible to filter out specific tags in a structured log, it’s easy to leak private data through things like the message field, and even something as innocuous as timestamps can sometimes be used maliciously.

So logging is extremely nontrivial if dealt with fully, and it’s more than just being sure to spløøt data out regularly or with a particular structure.",2025-04-24 20:01:55,2,nerd4code,programming
mohaerh,1k5bkbk,reddit,More dependence on frameworks... less developer knowledge of underlying systems.  Awesome...,2025-04-22 19:04:43,3,BotBarrier,programming
mogdngm,1k5a18t,reddit,You have my attention.,2025-04-22 16:26:09,2,blowmage,programming
mnjrmbh,1k0mioe,reddit,"""Atomicless concurrency""
Look inside -> atomics",2025-04-17 07:43:24,4,csdt0,programming
mndsx7c,1k0az4g,reddit,"This article describes a mysterious issue causing Varnish Cache to hang unexpectedly, particularly on weekend mornings. The core issue was traced to the interaction between a large number of **object variants** (created by using Vary: User-Agent and long TTLs) and a growing list of **bans**. When a request came in for a resource with many variants, Varnish would linearly search through each variant and check it against all active bans before finding a match.

The problem was exacerbated by a high TTL for ""hit-for-miss"" (uncacheable) objects, leading to a significant accumulation of variants over time, especially since deployments (which clear the cache) were less frequent on weekends. The steady addition of bans throughout the week, combined with lower traffic overnight, created a scenario where on Saturday mornings, the first request for a popular but now-banned resource with many variants would trigger an extremely long processing time (potentially hundreds of millions of ban-object checks). This held a mutex lock, blocked other requests, exhausted the thread pool, and ultimately caused Varnish to become unresponsive.

The article highlights that the lurker, a background process for applying bans, couldn't keep up with the rate of ban creation when the number of cached objects (including hit-for-miss markers) was high.

To address this, the author proposed a change to Varnish's invalidation mechanism. This led to the introduction of the ban\_any\_variant parameter in **Varnish Cache 7.7**. This new parameter controls the order of operations:

* **Old behavior (default in 7.7 for the first 10,000 variants):** Check all variants against bans first, then find a variant that matches the request's Vary headers.
* **New behavior (default in 8.0, can be enabled in 7.7 by setting ban\_any\_variant=0):** First, find the variant that matches the request's Vary headers, and then check only that variant against the bans.

This change significantly reduces the complexity of cache lookups in scenarios with many variants and bans, preventing the long processing times and subsequent hangs. The article demonstrates a substantial improvement in response time when the new behavior is enabled under problematic conditions. The author also details how reducing the TTL for hit-for-miss objects helped mitigate the issue in older Varnish versions.",2025-04-16 09:57:33,4,crazzydriver77,programming
mnajwam,1jzt7bc,reddit,bold forward thinking intro. pretty cool,2025-04-15 20:16:16,2,bzbub2,programming
mnd2zwd,1jzt7bc,reddit,"Neat, didn’t relational model go head to head with the network model for quite some time? And the less popular, hierarchical model?",2025-04-16 05:29:28,2,DuckDatum,programming
mnc803y,1jzlw03,reddit,What visualizer is used to make this video? Looks very cool,2025-04-16 01:50:25,3,Jedi-Master_Kenobi,programming
mmiptx9,1jwiqw7,reddit,That invokedynamic thing sounds interesting. Sure would be nice to have a presentation on it.,2025-04-11 05:58:02,1,BlueGoliath,programming
mm8zaek,1jvby65,reddit,"Mediant32 is mostly an exercise in recreational number theory.  
It's an alternative to fixed-point and floating-point for integer-only AI compute.

It features

1. Zero floating point ops. One works entirely in the field of rationals (integer fractions)/

2. Easy arithemtic accuracy measurements. One can maintain a running sum of all rounding errors and use these errors to improve accuracy, or guide the optimizer towards a certain objective.

3. Ops like Softmax, Logarithm, Square-root are all done with integers.",2025-04-09 17:50:10,1,DataBaeBee,programming
mm7e1or,1jv3n4m,reddit,Solved: Use static methods for construction,2025-04-09 13:03:12,22,silent_b,programming
mm9hh72,1jv3n4m,reddit,"This was the exact path we took when I was working on Windows Mobile / Windows Phone at the beginning of this century.  That product ended up not being very successful for a lot for reasons, but to this day I think the decision to write in C++, and not use exceptions was one snowflake in the avalanche.

The first thing to note is that C++ without exceptions undermines one of the very first reasons he gave for using C++ over C in the first place -- the standard library of data structures, including string and vector.  But, if you're using the STL without using exceptions, then you're not really using the STL, because the STL does everything that the author finds problematic: it allocates memory in the constructor, and **memory allocation failure is the most common error state you want to defend against.**  (At least -- it was in our context.  In some contexts, particularly in Linux, the allocator will freely overcommit and you only get an AV when you try to use the memory, or the OOM killer sends a signal to kill your process, neither of which is *great*, but to some extent, denying the problem exists and just *assuming* you have all the memory you need is a workable strategy in practice).  
  
 Consequently we had to ""re-invent"" our own janky STL implementation where anything that could fail, or anything that called something that could failed, was a static method that returned bool, and just ... at this point, you're fighting the language at this point, because this includes things that the compiler will happily implement for you like operator= and copy constructors.

The second thing to note is that the author uses the term ""undefined behavior"" to me something quite different than what C++ standard means.  Undefined behavior means that the behavior is literally undefined.  For example, what happens if you dereference a null pointer?  It could crash your process.  Or it could silently do nothing.  Or it could format your hard drive.  The compiler is free to assume that dereferencing null pointers never happen and can make optimization decisions based on this assumption which are counterintuitive (not only doing dead code elimination of things that happen AFTER the null pointer dereference, but changing the behavior of code leading up to it as well).

Exceptions are not undefined behavior.  They're *expected* to happen.  Not frequently, to be sure, but they have perfectly well defined behavior.  The ""undefined behavior"" the author mention is that the programmer doesn't *understand* the behavior or didn't *consider* the behavior (which makes sense, because so many C++ programmers are actually just C programmers in disguise and either don't know about, or firmly reject, any concept in CS besides what can be found in C).  And because of their lack of understanding, they wrote a bug.  

This is not something I will say frequently about C++ -- because I freely admit it's an overcomplicated bodge of a language with footguns everywhere -- but when it comes to exceptions, they got it right.  This isn't a problem with the language, it's just a skill issue.

The ""decoupling"" between where an error is generated and where it is handled is actually not a problem -- for the reason that 99% of error ""handling"" is no more advanced than ""if err return"".  RAII ensures memory is freed and resources are unwound as the exception passes through the stack.  There rarely any reason to write try/finally except at the very topmost level where you pop up a dialog or return a HTTP 500 error code or what have you.  What exceptions give you is the ability to affect a **nonlocal return**, which is actually a very powerful concept that massively simplifies the boilerplate and eliminates ""oops I forgot to if err return"" as a category of bugs.",2025-04-09 19:18:01,8,cashto,programming
mm75raq,1jv3n4m,reddit,"This is interesting.... but with respect, is there a reason for posting a 2012 blog post now? Is there something new to be learned here?",2025-04-09 12:11:35,27,CodeAndBiscuits,programming
mm74scn,1jv3n4m,reddit,I don't understand how this is a c vs c++ discussion. You could've implemented all these things in c++. It's a matter of using right tools for your use cases,2025-04-09 12:05:01,16,yanitrix,programming
mm7ffh2,1jv3n4m,reddit,"Reminds me of the nightmare (ok, mildly annoying and time-wasting few days) I had with a C++ library that didn’t document which of its routines might throw an exception.  So I had to add try/catch blocks in every place I used any of it, no matter how innocuous it seemed.",2025-04-09 13:11:19,1,ambientocclusion,programming
mm8a9o5,1jv3n4m,reddit,"I always liked that the ada Ravenscar profile (I think that's the one, it's been a decade) restricted the exceptions to be caught either in the subprogram in which it was raised, or the system. No ambiguity over where it would be caught.",2025-04-09 15:49:38,1,pfp-disciple,programming
mmqc4zm,1jv3n4m,reddit,"C is always an inferior choice compared to C++ as it requires more code to get the job done, plus manual resource management and even a simple thing as concatenating strings becomes a nightmare in C.",2025-04-12 13:40:38,1,SergiusTheBest,programming
mmr1yq8,1jv3n4m,reddit,">Library of data structures and algorithms (STL) is part of the language. With C I would have to either depend on a 3rd party library or had to write basic algorithms of my own in 1970's manner.

This is honestly not as big of a problem as people make it out to be. Sure, it’s nice to have it when you’re trying to bang out code quickly. When you’re in a long standing project, it’s basically nothing. 

>C++ enforces some basic consistency in the coding style. For example, having the implicit 'this' parameter doesn't allow to pass pointer to the object being worked on using several disparate mechanisms as it often happens to be the case with C projects. Same applies to explicit marking of member variables as private and many other features of the language.

I do tend to agree that having some basic syntax sugar on objects would be nice for C

>This point is actually a subset of the previous one, but it's worth of explicit mention: Implementing virtual functions in C is pretty complex and tends to be slightly different for each class which makes understanding and managing the code a pain.

Eh. I honestly haven’t missed vtables. You do need to stop thinking in OO, but it has fundamentally not been something I look back and ever wish I had. 

>And finally: Everybody loves destructors being invoked automatically at the end of the block.

Personally I’m not a huge fan of implicitly called code that you just need to know about when where and why it gets called. I suppose a very minimal amount, very tightly controlled is probably fine. C++ has like an entire encyclopedia of implicitly called code rules though, and it’s madness. 

I don’t really personay see these as justification of picking C++ over any C-like simple language. ",2025-04-12 16:01:23,1,uCodeSherpa,programming
mm72z6h,1jv3n4m,reddit,Great read. Thanks for the post,2025-04-09 11:52:35,1,ByronEster,programming
ml5whou,1jpirx7,reddit,No,2025-04-03 07:22:20,6,amyts,programming
mlj0oe0,1jpirx7,reddit,"That's nice and all, but it's simpler to just sync all CUD operations.",2025-04-05 12:01:31,1,Blue_Moon_Lake,programming
ml10f95,1jox2r3,reddit,Added example files demonstrating the usage of AnuDB.,2025-04-02 14:24:50,1,Fine-Package-5488,programming
mki2865,1jl1mwe,reddit,[deleted],2025-03-30 11:13:02,1,N/A,programming
moebezu,1k4u4o2,reddit,Paywalled. Even the link to 'read for free' doesn't work.,2025-04-22 08:05:34,1,GimmickNG,programming
mohubk4,1k4qqjh,reddit,"пидрофойл, rofl",2025-04-22 20:42:53,1,Legitimate-Soft-2802,programming
moc74bi,1k4qqjh,reddit,"Quite an unfortunate naming choice, it reminds me of Pidora fiasco…",2025-04-21 23:04:08,1,heraldev,programming
mocvhj2,1k4j2wm,reddit,"I'm sorry, I wanted to get through it, but whatever that glowy effect on the left is kept spilling over into the article and I couldn't process what you were saying.",2025-04-22 01:23:40,1,CodeAndBiscuits,programming
mody4ca,1k4j2wm,reddit,"Here’s my take on error handling:

1| A single kind of exception (i.e what Rust calls “panic”) which unwinds the stack and provides a stack trace. This is for low-level errors like out of bounds, null pointer deref, stack overflow or OOM.

2| Errors as values, but language should segregate errors from normal values. Syntax like `ReturnType ! ErrorType`.

3| Question mark operator like in Rust but with the ability to provide an error message: `foo.unwrap() ? “frobnicating” + frobId + “,”`. This text message doesn’t replace a preexisting error msg chain but adds to it, so in case of a deeply nested error you get a compound text like

> user 123, frobnicating 765, in file foo.txt

This is IMO better than stack traces because it includes actual data at every point of the error chain. Stack traces are walls of text that explain where an error happened but not a single hint of what was actually going on data-wise. It’s like “there was a crime at Foo bar on 37st street in Knoxville” but no hint at the kind of crime or perpetrator (a patron didn’t pay for a beer or a mass shooting?) Notice how in my scheme a function only has to provide details about its own args/locals, and it will be glued together into a coherent whole no matter the call order. 

4| Try/catch but not just for exceptions: errors too! Kind of like Rust’s scoped `try` blocks but without having to write out the question marks. The compiler simply detects that we are in a `try` block and emits error check and goto for every function which has a `! ErrorType` in its return type. It’s simple as hell but for some reason no `Result`-oriented language designer had the audacity to realize that value-based error handling can be just as ergonomic and clean as exceptions without their downsides.",2025-04-22 05:48:49,1,Linguistic-mystic,programming
moeqmd1,1k4j2wm,reddit,"I think the most important part of this article is the contrasting views on different approaches towards the end. The reason being is like most problems I don't think there is a single ""one true way"" - there's a set of trade-offs between language design and the implementation of those languages.

**Re: stack traces don't have enough runtime data**

I think this is more likely a result of most developers only ever using the default stack trace format which doesn't print function call arguments - only the function call name and location.

If we have all stack frames it should be trivial to extract the variables.

That said it feels like in these cases we are also trying to use logging as a debug mechanism (potentially instead of a debugger) which can lead to its own issues (e.g. spewing sensitive data into log files).

**Re: exception design**

I think another root cause for many problems also stems from how developers construct exceptions (will vary by language). Similar to logging, exception writing is a bit of an art in predicting what future developers will need from an informational point of view.

Consider:

```
def func(messages):
    if not 5 <= len(messages) < 10:
        raise ValueError(msg)
```

Which message is more useful?

""Incorrect messages""

""Invalid number of messages. Must provide 5-9 messages. {len(messages)} were provided.""

But the latter is more effort to write and might not even come up until years later when some other aspect of the application changes.


Whilst you can pull all the variables that led to this situation, there's a good chance that pulling out a debugger is going to be a better choice.

I'm currently working on some API tests and using Python requests' handing `response.raise_for_error()` which turns HTTP errors into exceptions. The only problem is that this isn't actually enough info when something goes wrong. Given that the API has well formed error messages including request IDs, error codes, and potentially other data, what I really should be doing is stuffing this into its own exception class with this data available for inspection. (In fact the response data might already be in the exception but the default string representation doesn't include it so I can't see it in my logs)Fc

**Re: aircraft and medical services**

It really needs emphasising that you should choose appropriate tools for the task at hand.

If you're aware of embedded medical devices running JavaScript please tell us so we can boycott that company 🙃🙃.

I suspect that most people hanging out in this subreddit are web programmers, with a healthy amount of standalone applications and embedded developers thrown in.",2025-04-22 10:43:33,1,nicholashairs,programming
mo7ua3m,1k45nqt,reddit,Sounds... lit.,2025-04-21 06:37:35,-2,BlueGoliath,programming
mnvqiob,1k2bc40,reddit,"Ah yes, the pointer receiver vs value receiver, another flaw I need to add to my list of reasons for despising Golang.",2025-04-19 05:02:13,3,Linguistic-mystic,programming
mntqc1w,1k2bc40,reddit,Databases have logs you know,2025-04-18 21:13:26,0,JanisHamburgers,programming
mo20wl1,1k2b3gz,reddit,Who comes up with these descriptions lol? Byzantine software.,2025-04-20 07:10:53,-2,lcserny,programming
mnsmp4d,1k2azhv,reddit,The accompanying talk: https://www.youtube.com/watch?v=_ahvzDzKdB0,2025-04-18 17:46:50,2,ketralnis,programming
mnkwrmh,1jz085z,reddit,What's the point in posting a 9 years old article about a certain problem in a still-evolving language without giving an update on the situation today? Were these issues addressed since then?,2025-04-17 13:20:25,1,somebodddy,programming
mmp523f,1jvt1rk,reddit,You touch very good point that most companies forget or don't know (because they fully rely on compliance software to tell them what to do): YOU CAN define and change the controls in SOC 2.,2025-04-12 07:22:10,3,chrans,programming
mm4kmi6,1julftt,reddit,"I usually call code like this ""honest,"" because it doesn't try to hide its ugliness.",2025-04-08 23:56:36,3,Snarwin,programming
mm3w0z7,1julftt,reddit,Seems like Common Lisp's would be a better lisp for this use case.,2025-04-08 21:39:16,2,church-rosser,programming
mm5qh0c,1julftt,reddit,Yeah that's what my mom always told me in high school,2025-04-09 04:17:20,2,geckothegeek42,programming
mm6o9gw,1julftt,reddit,"Personally, I would go with `defmethod`s; that's simply more maintainable in the long run for extremely complicated conditions.

Using a ""dispatch function on match"" pattern is almost always going to be more maintainable than ""execute inline code block on match"", and the `match` part really should be a function on it's own.",2025-04-09 09:48:46,1,lelanthran,programming
mlds9oh,1jrdb9n,reddit,Why the heck is Bazel creating 26Gb of output when most everything else (except Scons) is only creating 3Mb?,2025-04-04 14:48:25,9,NeitherPin9613,programming
mlekt1i,1jrdb9n,reddit,"How were these particular build tools chosen? E.g., why are Pants and Buck omitted from the list?

It would also be interesting to do a feature-by-feature comparison to accompany the benchmarks. It'd be understandable if one tool uses more resources but is also capable of executing more complex build processes, e.g. Some existing work on the subject: https://simon.peytonjones.org/build-systems-a-la-carte-theory-and-practice/",2025-04-04 17:11:02,3,link23,programming
mlfx0dp,1jrdb9n,reddit,"My own such project about Java (no recent updates): https://tkruse.github.io/build-bench/README.html


Generally, low overhead is not the only thing to look for. Incrementality and parallelism are much more impactful for large projects.",2025-04-04 21:17:33,2,tkruse,programming
mlgj987,1jrdb9n,reddit,"I'm surprised that he's got ninja down as ""insignificantly faster than make""",2025-04-04 23:27:41,1,wonkynonce,programming
mlxgpgu,1jrdb9n,reddit,"No plots, no any description of results, no any description how rules looks like. This report should be much more attracting

Also it does not make sense to use \`touch\` under a hood. Tools like Bazel uses caching. Caching works best, if compilation is heavy. \`touch\` is not heavy at all",2025-04-07 21:13:43,1,Slsyyy,programming
mljn2ix,1jrdb9n,reddit,Lowest mental overhead? Cargo,2025-04-05 14:32:48,-2,brigadierfrog,programming
mlal6u0,1jqwy2e,reddit,I think the result is counter intuitive here... wouldnt increasingly large input favor vector methods? The slotlin charts seem to agree with this,2025-04-04 00:17:08,1,pkx3,programming
mkyhnbb,1joptu7,reddit,CREATE EXTENSION vector;,2025-04-02 01:51:27,1,d4v3y0rk,programming
mkt4qkx,1jo1rvd,reddit,"And yet, somehow still alive and lucid enough to tell his story. Humans can be remarkably resilient.",2025-04-01 04:45:55,2,TestFlyJets,programming
mkt5v5g,1jo1rvd,reddit,"I love dBASE/xBASE for ad-hoc and hobby data projects! Very few keystrokes do so much, it's almost like APL meets Visual Basic. The authors clearly hated verbosity.

I wish an open-source version were around. (The ""Clipper"" variants are compiled, kind of ruins the concept. Dynamism is its soul.) ☮️

dBASE was actually ""stolen"" from multiple other languages. In the early 1970's a bunch of mini-computer semi-relational database systems popped up with fairly similar concepts. dBASE borrowed bits and pieces from these when they made a PC version roughly around 1980.

It's cursor-centric nature makes many things easier to debug than SQL's functional-esque nature. **Imperative keeps proving easiest to debug** because of its fractal stepwise-refinement pattern, something functional can't do as well, at least not in an easily x-ray-able way. I stand by this.",2025-04-01 04:55:37,2,Zardotab,programming
mko1dco,1jo0q0r,reddit,I'm using a ALB to redirect customers to their own EC2 instance witjout exposing the EC2 ip address to the internet,2025-03-31 11:18:24,3,Positive_Method3022,programming
mkjsi9d,1jn261q,reddit,"""onsmalltalk.com doesn’t support a secure connection

You are seeing this warning because this site does not support HTTPS and you are in InPrivate mode.""",2025-03-30 17:32:12,1,igouy,programming
mknizsf,1jn261q,reddit,"Seems like it doesn't work. It renames the file atomically from file.jobeExtension to file.workingExtension to deque the item. This is great, but if the job processor dies immediately afterwards, then the file becomes orphaned.",2025-03-31 08:12:50,1,buozw,programming
mjwef4d,1jkm6ew,reddit,"If anything constraining onself forces you to write better code as it reduces the complexity and flexability. 


Its honestly the same argument as people had about goto and assembly language. Introduction of higher order concepts allowed for easier semantic telegraphing and made it easier to compehend code as patterns emerged.


Same goes for types. It was never about the speed of development or correctness of code. It was always about making it easier to comprehend code. Type by itself carries some data to the developer and allows for easier compartmentisation of ideas.",2025-03-26 20:52:04,58,Miserable_Ad7246,programming
mjwp8oy,1jkm6ew,reddit,"Tests don't replace types. Yeah, a certain part of the ecosystem that used unsafe languages, including languages that did not offer any static safety guarantees, ended up having to pay a huge cost: now they had to write an extensive test suite and aim for near-full coverage. Because anything can blow up anywhere (and the more corners you cut, the more unpredictable it is). In fact, if you look closely, in those cases the quality of the tests and assertions matters less than coverage.

The cost really is high. For one thing, you have to write the tests. Then you have to mock everything and add layers of indirection, unless there's some magic that allows you to skip part of that. Then those tests tend to be highly-coupled to the code, especially when you have to insist on triggering each and every branch, and they take a long time to run. They also do not yield much insight on the code.

Static type systems are much more structured and well-behaved by comparison. Sure, there's some overhead in declaring stuff or doing explicit coercions. But typing is overall much more concise and catches a lot of potential breakage even if it's not a substitute for testing either. It also lets you reason about code more deeply, impose structure and avoid surprises. Type-checking is usually much faster and in richer type systems even documents, at least partially, the code (it's always a pain trying to figure out what a function can ingest or spit out without types and without thorough documentation). Modern type systems provide at least some type inference and you don't have to spell everything out unnecessarily.

Yeah, ok, types normally don't replace all tests, but they sure prevent a lot of stupid mistakes rather effortlessly.",2025-03-26 21:42:49,12,edgmnt_net,programming
mjwvmtq,1jkm6ew,reddit,"This screams ""I just started programming and I don't see the value in this."" I think we've all been there, but it's definitely does not reflect the point of view of a seasoned programmer.

Also, the preference for test failures over compile time errors is wild. I know dealing with the compiler can be the bane of your existence early on in your career, but fwiw the further into my career I progress the more I appreciate it. Your tests may be wrong, and regardless you _will_ forget to run tests at some point. You won't ever forget to compile your code and you'll be thankful when it tells you what's wrong before it's done.",2025-03-26 22:15:57,20,Repulsive_Role_7446,programming
mkhif55,1jkm6ew,reddit,"With rage bait title like this, if you get downvoted to oblivion, I have 0 sympathy for you. Do better.. shrugs /leaves.",2025-03-30 07:40:37,8,wdsoul96,programming
mkgg9nh,1jkm6ew,reddit,"A sufficiently expressive static type system can embed a dynamic type system, and even better, it can do so with guard rails to ensure dynamic code is safely integrated back into the realm of statically typed code.

On the other hand, dynamic typing can't easily represent statically typed portions of the code without essentially building an ad-hoc type system. In theory I think you could build a gradually typed language that enforced safer boundaries, but in practice the ones I've used tend to allow untyped code to proliferate and infect the rest of the code.",2025-03-30 02:14:46,4,miyakohouou,programming
mkkzfbi,1jkm6ew,reddit,"Is this just some bullshit reverse psychology?

They are arguing for types, not against.",2025-03-30 21:11:49,1,menge101,programming
mjwmw0x,1jkm6ew,reddit,"I sure wish a nice **compromise language** could found. I've used both dynamic and static extensively over the decades and just like different aspects about each kind. Typescript is one attempt at merging them, but many say it still misses the mark, perhaps because it's *stuck* being tied to JavaScript.

I'd like to be able *selectively* mark code units as requiring type designations, for example. And designate some structures/modules that have at least a given subset of elements, but still be able to add elements. For example, saying a class of type Foo must have at least methods A, C, and X.  But you can add more methods to these minimum-subset-designated classes. (MSD class?)

Such would allow ""lint"" like utilities to warn about the most common type-mismatching sins. There would be a learning curve to knowing where and how to mark, I will agree. It won't be smooth out of the box, but if such a language is perfected, we could finally get the best of both, or something very close to it.

I'd like to see more *practical* research on such. Name this new language *Zardotab++* please 🤩

P.S. Whoever came up with the idea of overloading ""+"" to be both string concatenation and math addition in JavaScript deserve to be blindfolded and polymorphed.",2025-03-26 21:30:41,0,Zardotab,programming
mklgnyu,1jkm6ew,reddit,"All true except for my statically typed code will always be faster since the compiler can optimize for specific data types.

You will end up porting your perfectly good untyped code to a static language. It is inevitable.",2025-03-30 22:50:10,0,R-O-B-I-N,programming
mow9ohi,1k5658h,reddit,"QUESTION: Why not apply this communication pattern to everyday life? 

QUESTION: Wouldn't all communication be easier if you made everything you said clearer by differentiating different modes of speech, by adding a helpful typed prefix to everything you say, all of the time, to everybody?

THOUGHT, PHRASED AS A QUESTION: Can I add even more metadata to my speech?

THOUGHT (TONE: SARCASTIC): Perhaps a convention already exists that allows people to mark English-language sentences as questions - some kind of symbol or ""mark"" - although I can not think of one readily.

QUESTION (TONE: EVISCERATING): Can you imagine an organization so toxic that a developer would need to concoct a fresh standard to apply to the English language rather than simply asking their colleagues to clarify what they meant by commenting on a line of code with the ""poop"" emoji?

THOUGHT (TONE: JUDGEMENTAL): this is asinine

QUESTION (TONE: CONSTRUCTIVE BUT STILL JUDGEMENTAL): If it seems unnecessarily phlegmatic to write like this all of the time, why would it be different in code reviews? 

THOUGHT (TONE: CONSTRUCTIVE, CONCLUSIVE): I can see how differentiating between ""I will not let this code touch main if you don't resolve this"" and ""idk this is just a casual idea or comment I had"" is useful in code review comments, but I'm not sure if I want to resolve that by adding a full-on type system to the way I communicate?",2025-04-25 01:35:56,1,cube-drone,programming
mo43ngy,1k3o0d2,reddit,Is there a whitepaper?,2025-04-20 16:36:44,3,imbev,programming
mo33pgd,1k3hwiu,reddit,"Hi! Please proof read the article, especially in terms of code blocks — there are unnecessary escaping chars. Inline blocks are weird too",2025-04-20 13:14:48,2,HornedKavu,programming
moe4tqa,1k3hwiu,reddit,"Some time ago I faced the same problem when Python application was running as pid 1. Now I know about SIGCHLD, thanks!",2025-04-22 06:55:26,2,begemoto,programming
mnzgefq,1k35hii,reddit,This is starting to look like `useState` 😅,2025-04-19 20:36:50,1,SkooDaQueen,programming
mnoeti6,1k1p007,reddit,"This was written by the person in the comp sci group project who didn't actually do any of the work but was at every meeting and ""helped"" everyone else write code.

  
On a more serious note. I'm an engineering leader. I hate metrics and I hate micro management. However, I LOVE impact. So I don't give a shit how you get your job done as long as the impact is felt and delivered on time at the correct quality level.",2025-04-18 00:02:02,100,binarypie,programming
mnoa86u,1k1p007,reddit,"This article is nonsense. Mandatory pair programming IS a form of micromanagement. The problem is managers hate that they don't have full control over the knowledge workers' day, so they push movements like this as a way to exert more control to make sure every worker is obedient and compliant at all times. Like every other ""best practice"" it should be left to the individual developer whether they use it or not. There's certainly no grass roots movement, give me a break!",2025-04-17 23:35:17,143,theSantiagoDog,programming
mnnyxpj,1k1p007,reddit,"Introverts unite and opt out of pair programming. An even quieter rebellion.


More seriously, pairing can be nice in short bursts but any more than that is exhausting.",2025-04-17 22:30:10,82,eikenberry,programming
mnnx8yv,1k1p007,reddit,"I hate to be that guy, but I'll tell you exactly why this won't work.  
  
I'm an SE manager. I hate metrics, love development and good engineering, and love pair programming. I'm a huge advocate for XP.  
  
BUT. I also run projects, and I'm accountable to the people who pay our salaries. And I have seen more than once developers who genuinely don't have the skills necessary to do the job hide behind pair programming. I've also seen developers abuse pairing, either disappearing for hours at a time and not communicating with their partner or clearly not paying attention and doing something else (this is especially a huge problem in remote). So unfortunately there has to be some mechanism of accountability.  
  
Now that doesn't mean metrics or micromanaging are good. I'm all for finding ways to decrease those. But using pairing as a mechanism to avoid accountability is never going to fly, and actively proposing it looks really bad and just gives pairing a bad name.",2025-04-17 22:20:37,62,Altruistic-Gate27,programming
mnnzvk1,1k1p007,reddit,I'd rather chew on rocks than be subjected to this nonsense,2025-04-17 22:35:37,34,Zanion,programming
mnop0g0,1k1p007,reddit,"Pair programming is great when starting up a new feature or project, but mobbing also works.

It’s also great when onboarding someone.

Constantly doing it, however, makes little sense. Maybe in the context of very sensitive software which needs 20 eyes on it before it even becomes a PR.",2025-04-18 01:04:32,5,bureX,programming
mnouf0q,1k1p007,reddit,"I love to pair program. It can have major benefits that code review tools can’t replicate. 

But I would quit a job if it was 100% mandatory. Maybe I could see a policy about pairing on some business critical component. But that tends to happen organically.

Anything else is toxic.",2025-04-18 01:38:18,8,-think,programming
mnpbga4,1k1p007,reddit,"My current gig did pair programming for the first couple years i was here. And it was awful for a variety of reasons:

1. Throwing two devs on a story does not make the work go any faster, if anything it slows things down as you need to coordinate on every small decision.
2. Low performers on the team can skate by unnoticed. Instead of struggling and building their knowledge of the product they lean on their more senior teammates as a crutch.
3. Working collaboratively with another person your entire work day is exhausting, no matter how extroverted you are.

Pair programming is awesome for onboarding new people or working on a particularly challenging problem. It is a scalpel not a hammer",2025-04-18 03:32:23,7,HedgehogMode,programming
mno7w19,1k1p007,reddit,"Interesting thought in principle, but lots of whimsical thinking in the article. No company is going to commit to unconditional pair programming - and for good reason. Yes, two programmers may be likely to accomplish the same task, plus review, in a shorter time, but probably not half the time. And stalled commits waiting for review for days may be a thing in some places, but far from all. And, ultimately, I don't even think it would work. If you pair always the same people, then metrics can be applied to them jointly. If you mix up pairings, then you just need to tweak your metric accounting to attribute half of each metric to each peer in a pair. In the worst case, you can be unlucky and get paired with less competent peers that bring your metrics down (in the best case, you can coast on your peers' skill). I understand the misgivings about ""scientific management"", but proposing a happy thought on the basis of a bunch of assumptions (perhaps based on personal experience, but still) is not a great alternative either.",2025-04-17 23:21:45,6,jdehesa,programming
mno3lpf,1k1p007,reddit,over my dead body lol.,2025-04-17 22:57:02,8,moreVCAs,programming
mno6ccs,1k1p007,reddit,I can’t imagine being so slow at programming that you think having to explain every step to someone else feels faster to you.,2025-04-17 23:12:52,6,account22222221,programming
mnpzrto,1k1p007,reddit,"Pair programin is only useful if the pair gets along, has a similar level, both are extrovert, both has same authority, have an 8h a day combat proof laringe, both has adecuate higiene, are none of them care about ergonomics or remote work.


Mandatory practice.",2025-04-18 07:10:03,1,Lurker_enesimo,programming
mnq66h6,1k1p007,reddit,"""Okay, so we start by assigning everyone a PACOF of 1. That's pair contribution factor, honey. Then we adust each PACO's PACOF according to the productivity of the pair though EPACOF. That's the Ephemeral Pairing Adaption Factor for you. If we couple this with the EPSA... *sigh* Ephemeral Pairing Selection Arbitrator - we project that a PACOF certainty of 97.5% can be achieved by June 1st, just in time for the bonus assignments.""

Way ahead of you, babe.",2025-04-18 08:17:30,1,elperroborrachotoo,programming
mnq94p3,1k1p007,reddit,"Is there really a point now of pair programming now we have AI that’s fairly decent at most stuff , I don’t know about anyone else here but I use AI like a rubber duck that talks back to me and found it has increased my productivity",2025-04-18 08:48:33,1,Look-over-there-ag,programming
mno0ane,1k1p007,reddit,"While I appreciate the sentiment, it is really hard to get over the hill of “why am I paying twice as much for the same job one person does?”

There’s usually other benefits to the SDLC like reducing the need for peer review and sometimes also an increase in quality, but it’s really hard to make that case. I’ve tried.",2025-04-17 22:38:04,1,malperciogoc,programming
mnpjhmo,1k1p007,reddit,"I think pair programming can increase productivity if there is compatibility and competence amongst the programmers concerned.
But otherwise, its fine to code alone. Some problems are complex and people need to be left alone uninterrupted for a certain amount of time to get it done right.
The problem is managers without sufficient engineering experience enforcing stupidity and getting in the way.",2025-04-18 04:35:20,1,StarkAndRobotic,programming
mnonmpk,1k1p007,reddit,Dumb. Next!,2025-04-18 00:56:07,0,tenken01,programming
mnozm54,1k1p007,reddit,"Nice try slackers, i work better independently. Thats a hard pass for me.",2025-04-18 02:11:01,0,xitiomet,programming
mnos43y,1k1p007,reddit,"I’ve had more success using something like Agile, Scrum, or Kanban. When I am designing a program or a portion of a program, I couldn’t make any mental progress on the design with someone (a pair) interrupting and chattering in my ear.  Developing algorithms or processes takes a lot of intense thinking and sketching to arrive at a solution.  A sudden interruption can cause that thinking to collapse. I am much in favor of team code reviews to check and criticize a programmer’s work. I am definitely against doing coding in place of a good paper design first.",2025-04-18 01:23:54,0,Doug12745,programming
mn8umzl,1jzt66y,reddit,Excuse me...what?,2025-04-15 15:12:34,4,Terribleturtleharm,programming
mnavin1,1jzt66y,reddit,I somehow assumed this was going to be about image compression.,2025-04-15 21:14:08,2,jdehesa,programming
mn8vb0g,1jzt66y,reddit,Ban this bot,2025-04-15 15:15:55,-3,masterchief0587,programming
mm5nmzq,1juv53z,reddit,"I just don't get why anyone would want to over burden the mcp server with the role of an authorization server. Just use OAUTH as it was originally designed: On failed authentication redirect to the real authorization server, to do the auth. No need to add token creation and handling to the mcp server,  adding unnecessary state where stateless design would be more easily,  more scalable and more secure. ",2025-04-09 03:56:05,1,BlackSuitHardHand,programming
mmwf529,1ju8hve,reddit,It is much better to use ClickHouse instead of TimescaleDB for analytics over big volumes of data. ClickHouse performs analytical queries over enormous amounts of data at very fast speed (literally it can scan billions of rows per second per CPU core). See https://benchmark.clickhouse.com/,2025-04-13 14:28:12,1,valyala,programming
mm07x5p,1ju8hve,reddit,"Why anyone would try to use an RDMS for time series data is a mystery.  

What’s time series data? Think data points indexed by time. Things like how many requests per second does my server handle or how many errors has my service generated in the last 24 hours. 

Time series databases are optimized to store this type of data. 

The author writes about TimescaleDB, a PostgreSQL extension that adds time series functionality to PostgreSQL. There are several other options, some of which are listed at the end of the Wikipedia page on the topic: https://en.wikipedia.org/wiki/Time_series_database. 

Two databases in that list are especially interesting:

* Prometheus - a popular event monitoring and alerting application. This is used by a lot of back end services to alert ops teams when services are experiencing issues. 

* RRDTool - this is used by a lot of monitoring systems that provide similar functionality to Prometheus. The reason I call it out though is because the Wikipedia has details on how it stores and queries data that many of the other databases don’t describe and its methodology is interesting.",2025-04-08 09:11:29,2,mofreek,programming
mlwz23v,1jtttxw,reddit,"This whole post could be summarized as ""Don't access value once they are moved"". It's such a basic principle, I'm not sure what's so special about `std::optional` that necessitate a blog article about it specifically?",2025-04-07 19:42:06,45,jonatansan,programming
mlwznbh,1jtttxw,reddit,"Three parts of the blog that are incorrect:

""// from here onwards opt doesn't have a value"".  Not true.  opt still has a value, just that it has a value in a valid but unspecified state (for arbitrary Ts.  Some types do define their moved-from value).

""if (opt.has\_value())  // true, unexpected!"".  Not true: completely expected.  The previous code did not move the optional, it moved the value inside the optional.  Which means that the optional still contains a value in a valid, but unspecified state (for arbitrary Ts.  Some types do define their moved-from value).

""leftover variable, `opt`, will *not* have a value"".  Not true: opt still has a value, a moved-from T.  std::move is ""only"" a cast.  Just means that when you call .value(), you're getting an rvalue-reference to the internal value. And that move-constructs x from the contained value.

    #include <iostream>
    #include <optional>
    #include <string>
    
    int main() {
            std::optional<std::string> opt = std::string(""ThisIsAReallyLongString"");
    
            auto x = std::move(opt).value();
    
            std::cout << x << '\n';
    
            if (opt.has_value()) {
                    std::cout << ""Has Value\n"";
            }
    
            std::cout << *opt << '\n';
    }

Gets the output of ""ThisIsAReallyLongString"", ""Has Value"", and a blank line.",2025-04-07 19:45:08,50,AKostur,programming
mlx3ukw,1jtttxw,reddit,seems like a problem that only happens if you choose an outdated programming language?,2025-04-07 20:06:56,-28,SadPie9474,programming
moih3ih,1k5it2y,reddit,https://xkcd.com/927/,2025-04-22 22:43:08,12,Unlikely_Response125,programming
mojzgoq,1k5it2y,reddit,"Oh, come on!",2025-04-23 04:09:41,6,RedEyed__,programming
mokwfrv,1k5it2y,reddit,"Too much magic in my opinion, and the `prevTargetValue` thing will not work when an attribute relies on multiple other attributes. The animation syntax also makes little sense when you could've done something like `{values:[...], step: 50, interval: 10}`",2025-04-23 09:27:36,3,SZenC,programming
mnddsxv,1jzuqi0,reddit,"What is shotgun surgery? Thanks for asking. Here’s [what it is](https://youtu.be/7T3q3g4kYk0?si=uK7ymljhTxyxTCdy&t=45s)

Using a massively disproportionate tool for solving a problem of a size that is disproportionate to the type of tool used.",2025-04-16 07:15:26,2,this_knee,programming
mo0r6c5,1jzuqi0,reddit,"For this code example the more appropiate thing is to have data as code for these rules. A map/dictionary would hold all these rules, and for maintenance it is easier to add more conditions to the rules. 

These maps could even be in a external file, so code changes are not even necessary anymore.",2025-04-20 01:12:09,1,faustoc5,programming
mn4oew3,1jza9y9,reddit,I wish I could program asynchronously.,2025-04-14 21:19:07,5,FF3,programming
mma5r1y,1jvg12l,reddit,Level 0: use pytest instead,2025-04-09 21:16:19,5,teerre,programming
mmqyq70,1jv4fnh,reddit,"The theory crafting involved in that by marketeers is very mentally masturbatory.  In reality: the results, as applied, are terribly _dumber_ than by other methods.  The idea that results are ""smarter"" is gaslighting: people are actually able to SEE for themselves with their own two eyes how pathetically marketing targeted marketing works.  For an example: Amazon often tries to show me more of things that I made one single purchase of, of items that I will only purchase one of, perhaps ever, or at best perhaps every few years.


A person would have to be in some sort of dissociative fugue to perceive that as ""smarter"".


>The Party told you to reject the evidence of your eyes and ears. It was their final, most essential command.

George Orwell, 1984 ",2025-04-12 15:44:44,1,Traveler3141,programming
mlhjf53,1jrszm2,reddit,"Here I thought you meant the browser will do it for you.

Still have to design a dark mode theme, you're just letting the browser pick it automatically if the user wants it",2025-04-05 03:28:14,7,Lachee,programming
mlkipj2,1jrszm2,reddit,"    * {
        background: #333;
        color: #fff;
    }",2025-04-05 17:29:25,2,Blue_Moon_Lake,programming
ml5eavg,1jowy1p,reddit,"Why would it not be mentioned? There are lots of systems that still use soap. Granted, they are either very old or they rely on very old frameworks that produce soap out of the box. But they exist and having a wild encounter with the is not rare. So it makes more sense to know than not to know",2025-04-03 04:32:52,2,coyoteazul2,programming
mkyps5n,1jowy1p,reddit,There used to be a gag site like stopthesoap.com or something that was and infinite scrolling page of SOAP xml.  It was spot on.,2025-04-02 02:43:09,1,Admqui,programming
mjyxnq4,1jkma7t,reddit,"You don't after you burned through the money and fail to create a shippable product.

Fun fact: most start-ups fail.",2025-03-27 06:16:43,3,elmuerte,programming
movsyr6,1k6w7em,reddit,is the turtle getting fucked by the disk? ,2025-04-25 00:00:48,8,swutch,programming
mnvi0d2,1k26p9w,reddit,"All the architects I have met are some old guy promoted to a figurehead position because people with similar experience are directors now. Nowadays, the architect role is almost obsolete; the new role that replaces that is Staff+ engineer.",2025-04-19 03:53:01,0,Southern-Reveal5111,programming
mn77m3v,1jzk79x,reddit,That was 5 minutes of my life I'll never get back!,2025-04-15 08:01:30,4,fpcoder,programming
mn1mmos,1jywcbw,reddit,"The two most difficult things to get right in programming:

* Naming things       
* Cache invalidation       
* Off-by-one errors",2025-04-14 11:32:35,9,diMario,programming
mn1r4ht,1jywcbw,reddit,"""Cache"" is an extremely abstract concept in computer science, but you're referring to just one type of cache (distrubed cache for distributed services). It makes no mention of the many many other layers of cache we all interact with every time we use a computer (L1, L2, L3, disk cache, TLB in the MMU, DNS, etc etc etc).

Also ""TTL"" is just one possible evicition strategy metric. I'd say it's not even the most important one if you're trying to introduce the concept for the first time. Relative recency (LRU) or frequency (LFU) would probably be better. At the very least, mention the existence of other metrics.

But really, this article isn't necessary at all, because someone asking ChatGPT ""what is cache"" would produce an answer at least this useful.",2025-04-14 12:06:15,5,zjm555,programming
mn1q5fe,1jywcbw,reddit,I usually cache in memory but you do you,2025-04-14 11:59:10,1,ThatHappenedOneTime,programming
mn4qso4,1jywcbw,reddit,What about flushing (part) of the cache when a resource changes/deleted?,2025-04-14 21:31:59,1,DavidM01,programming
mly6yyv,1jtu74t,reddit,RemindMe! 3 days,2025-04-07 23:42:27,2,Soggy_Resource736,programming
ml7d61y,1jpggrj,reddit,no,2025-04-03 14:19:39,2,Goldman1990,programming
ml1ixt4,1jpggrj,reddit,Micro and Angular don't really go together do they?,2025-04-02 15:57:44,2,cheezballs,programming
mkzcsd0,1jpggrj,reddit,Pathetic 🤢,2025-04-02 05:46:44,2,boomer4115,programming
mkzoupf,1jpggrj,reddit,Just use React,2025-04-02 07:55:59,-5,AshKetchupppp,programming
moo7hyf,1k5c83f,reddit,"Mutable defaults are nice for simplifying caching of results though. E.g.:


```
def foo(x, cache={}):
    if x not in cache:
        cache[x] = bar(x)
    return cache[x]",2025-04-23 20:34:06,1,stop_going_on_reddit,programming
mo7k9p8,1k3s77g,reddit,Jfc how many subreddits did you post this on?,2025-04-21 04:59:09,2,TrenchSquire,programming
mntzimn,1k2g361,reddit,Very good programming content.,2025-04-18 22:04:49,0,BlueGoliath,programming
mlilwrr,1jrwdeu,reddit,I personally don't see a problem with it if it's content trying to teach. Unless you're repeatedly posting it into the same community.,2025-04-05 09:35:28,2,ImChronoKross,programming
mlibmtc,1jrwdeu,reddit,"Stop spamming your own shit. It's against the rules of reddit and it's really obnoxious.

https://media.giphy.com/media/KBaxHrT7rkeW5ma77z/giphy.gif",2025-04-05 07:40:41,-1,AnomalousBean,programming
mkufe47,1joswmv,reddit,April Fools Day is the worst. I can't tell if this is a shit post or genuine.,2025-04-01 12:24:36,33,ConstructionOk2605,programming
mkv7fxe,1joswmv,reddit,If they cut scope and then still delivered something unstable then it sounds like the error was made much earlier than that decision to cut scope.,2025-04-01 15:08:14,4,prescod,programming
mky35ht,1joswmv,reddit,"Sounds like an overly complex version of Daniel Kahneman's [premortem](https://fs.blog/kahneman-better-decisions/) approach for critically analysing plans.

He describes it, among some other nice ideas, in his book: Thinking, Fast and Slow.",2025-04-02 00:20:35,2,HexDumped,programming
mkroheq,1joepbx,reddit,"It's like a kaleidoscope of beautiful, unique snowflakes.",2025-03-31 23:05:06,3,awfulentrepreneur,programming
mkq61ne,1jo3dvv,reddit,Those are screenshots?,2025-03-31 18:22:26,2,daH00L,programming
mkjjhyk,1jngcl2,reddit,"Eww AI ""art"".

But TIL about `cargo-mutants`, gotta play around with that a bit. There's this class of ""the future is now"" testing techniques like Property Based Testing and Mutation Testing that are terribly underused in mainstream development.",2025-03-30 16:46:32,6,latkde,programming
mkjndpj,1jngcl2,reddit,"PIT, cargo-mutants, and mutation testing tools are an absolute must for production code for me. Love tools like them so much",2025-03-30 17:06:21,1,zmose,programming
mots4z0,1k6vd7r,reddit,Because D♭ was used by Chopin and Debussy.,2025-04-24 17:47:37,6,SaltineAmerican_1970,programming
mou3qpy,1k6vd7r,reddit,"Because I like Java but hate getters, setters, and wrapping functions that I want to pass around in objects to simulate lambdas.  

I'm aware Java has improved from the last time I used it, but not by enough to get me to come back, especially since I hear lots of shops are still on very old versions.  

Also, unity as a hobby.  

Why your blog?",2025-04-24 18:42:42,6,NewPhoneNewSubs,programming
motbni3,1k6vd7r,reddit,Because 👓?,2025-04-24 16:30:51,10,RapunzelLooksNice,programming
motg71j,1k6vd7r,reddit,"I just think it's neat.

https://farm8.staticflickr.com/7056/6847917434_b674445ffb_b.jpg",2025-04-24 16:52:14,2,TheMurmuring,programming
mou1tre,1k6vd7r,reddit,"It is my favourite language, but has its flaws. Starting with Microsofts trend to kill third party projects...",2025-04-24 18:33:22,1,Byte-64,programming
momhyjx,1k61xy5,reddit,"They don't. 

There, I saved a click.",2025-04-23 15:37:43,7,NuclearVII,programming
mojeruu,1k5nrj1,reddit,Very important for programmers.,2025-04-23 01:56:18,2,BlueGoliath,programming
mnndhls,1k1ku3n,reddit,"> At a glance, can you tell what each value means?

Yes, I use vscode and it shows what the param is called",2025-04-17 20:38:37,5,coyoteazul2,programming
mnoc563,1k1ku3n,reddit,Get yourself some inline hints. Even vim can do it these days,2025-04-17 23:46:20,3,Booty_Bumping,programming
mnpi1wl,1k1ku3n,reddit,"Sometimes n-params, for 2~3 params with max 1 optional param, or rest param.  
Single param otherwise.",2025-04-18 04:23:20,1,Blue_Moon_Lake,programming
mnpxx4s,1k1ku3n,reddit,This is really a criticism of tuples.,2025-04-18 06:51:07,1,zhivago,programming
mnnkonx,1k1ku3n,reddit,"Webdev discovers struts, 2025 AD.",2025-04-17 21:14:18,-2,BlueGoliath,programming
mo7c0hc,1jyyx64,reddit,"It's here to stay, but will take a while to figure when, where, and how to use it properly, and newbies and zealots will make a lot of messes like they always do with new ideas and/or fads.  It's another tool in the toolkit, but up to the ""carpenter"" to select the right tool for the job.",2025-04-21 03:51:35,0,Zardotab,programming
mn1zxyj,1jyxs22,reddit,"Making nice and neat diagrams that don't feature the new actors involved in a now more complex process sure helps selling yourself into a rent, but I don't think it makes for a good argument about either scaling or security.",2025-04-14 13:04:56,8,IGI111,programming
mn22zh1,1jyxs22,reddit,"I LOL'd at the ""SSH Key Sprawl"" illustration.

""What if I tried to convince the reader that this was a real problem by just conjuring up a messy diagram of nonexistent relationships between a few things?""",2025-04-14 13:23:31,6,gottago_gottago,programming
mn24vmy,1jyxs22,reddit,"Ignoring the fact that this is a promotional piece, the fact that SSH certificates are desirable in large systems is correct and well established: https://engineering.fb.com/2016/09/12/security/scalable-and-secure-access-with-ssh/",2025-04-14 13:34:50,3,nicholashairs,programming
mn27s4k,1jyxs22,reddit,"Correct me if I am wrong, but while certificates do sound nice in theory, I don't think there is much practical difference. The reason being - revocation. As much as it sounds nice, you can't just have logic ""this certificate is signed by a valid authority, so it is ok"" - you basically need to check each and every single certificate with a separate query ""hey, was this certificate revoked?"".

You still get some nice organization of responsibilities, and with certificates you probably end up with a better self-documentation and maybe distributed authorities (i.e. each certificate says what it is valid for, and where to check if it was revoked). Probably stuff like some caching and handling downtimes might work better. Maybe also less storage to keep revoked certs than those active.

But I feel a well written CRUD for managing ssh keys is not that different, and would fulfil all needs of even largest companies.",2025-04-14 13:51:28,2,Noxitu,programming
mmy0gz2,1jyc4ic,reddit,"This is an ad.

And beyond that, althought i like the idea of typed configurations, this problem could have been avoided with good old json. If a configuration file contains extra stuff that the application is not expecting that should be an error. That immediately fixes your retry delay issue. Moving the value into the object will now give an error while reading the configuration.  
The problem with the range can be fixed in so many ways. If you can replace your json configuration with some other format like typeconf then you can also just change the field name to be \`radiusInKm\` or \`radiusInMeter\` or whatever you need. No need for some fancy (although probably cool) typed configuration format. Just be smarter when reading your configuration and dont accept any mash of bytes as valid config.

PS: And even with typeconf your documentation is still out of date.",2025-04-13 19:27:43,1,Psychoscattman,programming
mmy4ze8,1jy6fg3,reddit,"DDB's read/write capacities scale independently. What you've done is double your write costs for, as far as I can tell, no benefit. Not to mention the complexity and consistency issues. Someone please tell me what I'm missing here, this makes no sense to me.",2025-04-13 19:51:58,4,wouldyastop,programming
mma8iti,1jv9si6,reddit,"One thing blogs and self promotional material always assume is that people know what they're talking about.

Honestly, some screenshots would make a world of difference.",2025-04-09 21:30:53,3,twigboy,programming
mm8g7vw,1jv9si6,reddit,"Code reviews today are line-by-line diffs. This format makes reviewers focus on individual changes to catch bugs, style issues, and bad variable names, rather than the bigger picture of what the code is doing and why.

However, I don’t think that’s what code reviews are for. Tests (and angry users) catch bugs. Linters catch style issues. And nitpicks almost always bog down the review and make it take longer for the code to merge.

I believe that the point of a code review is to help teammates understand *how* the author is trying to achieve their goal, whether that’s a bug fix, a new feature, or a refactor. A good review requires understanding the narrative behind a change, determining whether the structure of a pull request reasonably fulfills that narrative (interface changes, new data structures, etc.), and deciding whether the team is OK with maintaining this new shape of the codebase.

The current pull request interface makes this hard. It's just a wall of unordered diffs that you're left to piece together by jumping between files. When reviewing a pull request from a teammate, I found myself spending more time reconstructing the big picture of the changes than reviewing the code itself.

So I built Haystack to help with that. It breaks down a pull request into logical chunks and lays them out on an infinite canvas. It guides you through the changes as a structured visual story, helping you focus on architecture, intent, and maintainability instead of chasing nits. I hope that Haystack makes code reviews less of a last-minute, unwanted chore. And if it doesn’t, I want to hear about it!

If you’re interested:

1. Take a look at the demo playground[ ](https://haystackeditor.com/playground)[haystackeditor.com/playground](http://haystackeditor.com/playground)
2. Watch a walkthrough[ ](https://youtu.be/K_qLwXFwr8I)[youtu.be/K\_qLwXFwr8I](http://youtu.be/K_qLwXFwr8I)
3. Try it at[ haystackeditor.dev](https://haystackeditor.dev)",2025-04-09 16:19:01,1,DummyThiccSundae,programming
mlyfs0x,1jtvj1w,reddit,There is no “reference data type “ in C++,2025-04-08 00:35:37,0,Special_Lettuce_4412,programming
mlvrlem,1jton6f,reddit,Not using shopify is the baseline expectation.,2025-04-07 16:00:38,95,powerhcm8,programming
mlvst0q,1jton6f,reddit,Do any of you actually enjoy the hell this profession has become?,2025-04-07 16:06:59,46,TyrusX,programming
mlvs2ay,1jton6f,reddit,TLDR: they will not approve new positions unless you can prove AI can’t do the job.,2025-04-07 16:03:05,21,Calm-Success-5942,programming
mlvrwqy,1jton6f,reddit,Gross,2025-04-07 16:02:16,45,Charming-Breakfast48,programming
mlvtaj1,1jton6f,reddit,Felt sadness after reading it. What if your boss expects you of using coding agents? You effectively get disconnected from your codebase and after half a year you can't think constructively anymore. You resort to asking questions over and over like a child.,2025-04-07 16:09:33,14,robertpiosik,programming
mlvsij7,1jton6f,reddit,coincidental that there is a freeze on hiring in lieu of AI while  tariffs are tanking his company?,2025-04-07 16:05:27,12,headykruger,programming
mlvuypx,1jton6f,reddit,"Imagine a CEO issuing a memo to that says “using an ORM to generate data storage classes is now a baseline expectation.”

Let engineers do their jobs.",2025-04-07 16:18:05,17,CanvasFanatic,programming
mlvqiwd,1jton6f,reddit,"for those that don't want to go to X (I don't blame you)

---

Context: This is a Shopify internal memo that I shared here because it was in the process of being leaked and (presumably) shown in bad faith

Team,

We are entering a time where more merchants and entrepreneurs could be created than any other in history. We often talk about bringing down the complexity curve to allow more people to choose this as a career. Each step along the entrepreneurial path is rife with decisions requiring skill, judgement and knowledge. Having AI alongside the journey and increasingly doing not just the consultation, but also doing the work for our merchants is a mindblowing step function change here.

Our task here at Shopify is to make our software unquestionably the best canvas on which to develop the best businesses of the future. We do this by keeping everyone cutting edge and bringing all the best tools to bear so our merchants can be more successful than they themselves used to imagine. For that we need to be absolutely ahead.

**Reflexive AI usage is now a baseline expectation at Shopify**

Maybe you are already there and find this memo puzzling. In that case you already use AI as a thought partner, deep researcher, critic, tutor, or pair programmer. I use it all the time, but even I feel I'm only scratching the surface. It’s the most rapid shift to how work is done that I’ve seen in my career and I’ve been pretty clear about my enthusiasm for it: you've heard me talk about AI in weekly videos, podcasts, town halls, and… Summit! Last summer I used agents to create my talk, and presented about that. I did this as a call to action and invitation for everyone to tinker with AI, to dispel any scepticism or confusion that this matters at all levels. Many of you took up the call, and all of us who did have been in absolute awe of the new capabilities and tools that AI can deliver to augment our skills, crafts, and fill in our gaps.

What we have learned so far is that using AI well is a skill that needs to be carefully learned by… using it a lot. It’s just too unlike everything else. The call to tinker with it was the right one, but it was too much of a suggestion. This is what I want to change here today. We also learned that, as opposed to most tools, AI acts as a multiplier.  We are all lucky to work with some amazing colleagues, the kind who contribute 10X of what was previously thought possible. It’s my favorite thing about this company. And what’s even more amazing is that, for the first time, we see the tools become 10X themselves. I’ve seen many of these people approach implausible tasks, ones we wouldn’t even have chosen to tackle before, with reflexive and brilliant usage of AI to get 100X the work done.

In my On Leadership memo years ago, I described Shopify as a red queen race based on the Alice in Wonderland story—you have to keep running just to stay still. In a company growing 20-40% year over year, you must improve by at least that every year just to re-qualify. This goes for me as well as everyone else.

This sounds daunting, but given the nature of the tools, this doesn’t even sound terribly ambitious to me anymore. It’s also exactly the kind of environment that our top performers tell us they want. Learning together, surrounded by people who also are on their own journey of personal growth and working on worthwhile, meaningful, and hard problems is precisely the environment Shopify was created to provide. This represents both an opportunity and a requirement, deeply connected to our core values of Be a Constant Learner and Thrive on Change. These aren't just aspirational phrases—they're fundamental expectations that come with being a part of this world-class team. This is what we founders wanted, and this is what we built.

### What This Means

1. Using AI effectively is now a fundamental expectation of everyone at Shopify. It's a tool of all trades today, and will only grow in importance. Frankly, I don't think it's feasible to opt out of learning the skill of applying AI in your craft; you are welcome to try, but I want to be honest I cannot see this working out today, and definitely not tomorrow. Stagnation is almost certain, and stagnation is slow-motion failure. If you're not climbing, you're sliding.

2. AI must be part of your GSD Prototype phase. The prototype phase of any GSD project should be dominated by AI exploration. Prototypes are meant for learning and creating information. AI dramatically accelerates this process. You can learn to produce something that other team mates can look at, use, and reason about in a fraction of the time it used to take.

3. We will add AI usage questions to our performance and peer review questionnaire. Learning to use AI well is an unobvious skill. My sense is that a lot of people give up after writing a prompt and not getting the ideal thing back immediately. Learning to prompt and load context is important, and getting peers to provide feedback on how this is going will be valuable.

4. Learning is self directed, but share what you learned. You have access to as much of the cutting edge AI tools as possible.There is chat.shopify.io, which we had for years now. Developers have proxy, Copilot, Cursor, Claude code, all pre-tooled and ready to go. We’ll learn and adapt together as a team. We’ll be sharing Ws (and Ls!) with each other as we experiment with new AI capabilities, and we’ll dedicate time to AI integration in our monthly business reviews and product development cycles. Slack and Vault have lots of places where people share prompts that they developed, like #revenue-ai-use-cases and #ai-centaurs.

5. Before asking for more Headcount and resources, teams must demonstrate why they cannot get what they want done using AI. What would this area look like if autonomous AI agents were already part of the team? This question can lead to really fun discussions and projects.

Everyone means everyone. This applies to all of us—including me and the executive team.

### The Path Forward

AI will totally change Shopify, our work, and the rest of our lives. We're all in on this! I couldn't think of a better place to be part of this truly unprecedented change than being here. You don't just get a front-row seat, but are surrounded by a whole company learning and pushing things forward together.

Our job is to figure out what entrepreneurship looks like in a world where AI is universally available. And I intend for us to do the best possible job of that, and to do that I need everyone’s help. I already laid out a lot of the AI projects in the themes this year- our roadmap is clear, and our product will better match our mission. What we need to succeed is our collective sum total skill and ambition at applying our craft, multiplied by AI, for the benefit of our merchants.",2025-04-07 15:55:11,19,dakkersmusic,programming
mlvxrv0,1jton6f,reddit,"Thank God I deleted Twitter a couple months ago, being a programmer is much better without reading this crap everyday.",2025-04-07 16:32:28,5,iLoveThaiGirls_,programming
mlw9fhz,1jton6f,reddit,When do we replace CEO's with AI?,2025-04-07 17:31:39,6,rocketonmybarge,programming
mlvuw4u,1jton6f,reddit,"Maybe I missed it, but does anyone know whether Shopify or any other IT Company are offering developers opportunities to learn new required technologies or is it just expected to be done in their spare time?

I know learning is part of the job, but making something a basic requirement for employment without guiding the own workforce feels unfair.",2025-04-07 16:17:43,3,onkeliroh,programming
mlvvbr3,1jton6f,reddit,"So is accepting neonazis to sell merch via your platform, apparently.",2025-04-07 16:19:58,6,full_drama_llama,programming
mlvzivz,1jton6f,reddit,"On some level, sure. ChatGPT has given me helpful answers when Google, Stack Overflow, and official documentation have all failed me. It's just another useful tool for asking questions as long as you understand that you have to verify the responses. You wouldn't hire somebody who refuses to use Google to help themselves. AI is probably in the same boat.

But shoehorning AI into literally every step of the design process like this memo discusses sounds exhausting and unproductive.",2025-04-07 16:41:38,3,Nooooope,programming
mlvt5r5,1jton6f,reddit,(Programmingcirclejerk) can’t be any worse than writing Ruby,2025-04-07 16:08:51,7,pacific_plywood,programming
mlvvcs1,1jton6f,reddit,"my own thoughts: I recently left a company that was pushing for something similar. one engineer in particular insisted everyone could ""10x their productivity"" with AI tools. during this engineer's talk they mostly focused on things like meeting summaries, chat message summaries, etc. very little to do with actual coding, though. this was a problem with the company culture in general: people who don't have sufficient context telling others how to be more productive at their job, instead of doing ""user"" (employee) interviews about the topic. I left the company for unrelated reasons but I did give this feedback in an exit interview.

I've used AI tools like ChatGPT, v0, Copilot, and Gemini. I use Gemini mostly for spitballing random ideas outside of programming or some attempts at debugging. (people often talk about how it has helped them debug but I ended up getting the answer myself each time and Gemini did not actually resolve any issues. I haven't used it too much for this though.) v0 is cool for generating components but I have to give it a hefty prompt and it still mucks small things up. the prompt itself was only sophisticated because of my personal experience, knowing what to watch out for. Copilot is meh, I don't really care at all for its autocomplete. the most use I've found out of it is converting CSS attributes (dash-case) to React inline styles (camelCase). I've yet to use it for generating tests but might go with a different tool.

I'm not sure if the Rider IDE uses AI/ML/LLMs/whatever for autocomplete but I actually liked its functionality when working on a small Unity project.

back to the thread: I don't have enough insight into other people's roles to say whether or not AI is a useful tool for them, but the idea of testing people on AI skills gives me the ick. I just want fancier autocomplete, really.",2025-04-07 16:20:07,5,dakkersmusic,programming
mlvxu8u,1jton6f,reddit,"Honestly if this kind of mandate was given to me, I'd just cue malicious compliance. Everything I do is AI generated from that point forwards. What do you mean? Are you going to tell the CEO that you want me to slow down from my current 100x powerful AI work? Surely you don't want to be that guy.",2025-04-07 16:32:49,5,jhartikainen,programming
mm34baz,1jton6f,reddit,"AI can replace their business, which sells nothing special. How about that?",2025-04-08 19:24:42,2,Endless_Zen,programming
mnfdftg,1jton6f,reddit,"ROFL, what an ignorant tool.",2025-04-16 15:47:10,1,MakalakaPeaka,programming
mlpuct3,1jsxetj,reddit,"Ok, but we already have a term for data corruption, so I might have distinguished this as, say ""code corruption"" or something.",2025-04-06 16:05:48,5,Piisthree,programming
mlsiie0,1jsxetj,reddit,Why does every post about Go seem insane? Programming in Go makes you insane.,2025-04-07 01:06:23,1,dhlowrents,programming
mlrtdqo,1jso52d,reddit,This clearly was not written by someone with actual law experience.,2025-04-06 22:30:56,2,gboncoffee,programming
mlcrppl,1jr8q3t,reddit,"Interestingly, 248 is roughly the number of keywords in Swift.",2025-04-04 11:01:18,1,simon_o,programming
ml7tz7l,1jqcag2,reddit,"It's an interesting take, but to me it sounds like the author enjoys typing. And there is nothing wrong with that, I enjoy it too. However, It's designing software and seeing it come to life is what I enjoy and it's possible to speed that up with AI coding. Being able to write more unit tests so I don't have to interact with the testing team is a quality of life improvement alone LOL. 

That being said, the author is making somewhat of an assumption about what we enjoy about our jobs. I will concede that if the AI coding gets so good that it' gets the design right, and it's cheap, and the only human intervention that's needed is auditing the code, I'm out. Once the design, and ""building/design"" aspect is gone, I will have to find some other job to do. I do agree that requirements gathering, meetings, etc is just torture that I HAVE to do just so I can get to the building software part. 

However, I'm not seeing AI getting to that point until AGI comes along (which has been confirmed by some researchers). In which case, it won't matter because every job on the planet will change.",2025-04-03 15:42:35,0,Sufficient_Wheel9321,programming
ml5jq0n,1jq8ty7,reddit,Dumbest Java feature ever added.,2025-04-03 05:18:36,-1,BlueGoliath,programming
ml2cvyc,1jpr7gf,reddit,"Ruby needs a new strategic goal. It's struggling right now. TIOBE has tons of issues, but the long-term trend warrants some serious changes, including the new users problem (just look at ruby on TIOBE and you'll understand the problem; and again, I am aware that TIOBE has tons of issues and measures only a very few things).

I chose Ruby a long time ago over Python after having read https://www.artima.com/articles/the-philosophy-of-ruby (I still think it was the right choice) and I have been using Ruby ever since (also perfectly fine, matz is great) - but ruby really needs a complete new alignment and strategic goal, from A to Z, from bottom to top. There are also some changes in the ecosystem that moved in the opposite way: now you need 2FA for reporting issues on the bug tracker (yikes), after 100.000 downloads you can no longer remove your own gem, along with boring legalese https://blog.rubygems.org/2025/03/20/introducing-new-policies.html, the documentation is amazingly getting even worse and worse rather than better (not all projects, mind you; those who write great documentation are epic, but many hate writing documentation and then drop off, to never again use ruby). Sorry but there needs to be a systematic approach here. Each small problem needs realistic ideas and then execution of those ideas via actionable things that can be done. If I am a young 20 years old person today, would I be more likely to pick python or pick ruby? We all know the answer, so now ruby really needs to dig deep to **change** that answer. Idling away doing nothing isn't going to solve that problem, it'll only get worse - you only have to sniff at the dust of grandpa perl here.

I have tons of suggestions to make - optional authorship of modules/classes (finally having the same namespace but able to reside on rubygems.org too) and many more things, but I stopped caring about all those 2FA promoters (and rubygems.org ""We control your gem now muahaha""). There is something really fundamentally going wrong and those issues are mostly new really. Stop killing the hobbyists.",2025-04-02 18:21:47,2,shevy-java,programming
ml1dtq2,1jpr7gf,reddit,How is this different than any other language with lexical scoping?,2025-04-02 15:32:24,1,rooktakesqueen,programming
ml1poh5,1jpr7gf,reddit,What percentage of developers are even using Ruby? Or even Ruby on Rails? And why?,2025-04-02 16:31:37,0,this_knee,programming
ml21lyx,1jpr7gf,reddit,"I absolutely hate in how many different ways you can write stuff in Ruby. It makes it super hard to switch between libraries. 

Also, Ruby has this thing where you can have a function that refers to a variable outside of the function. 

Then when you invoke the function it'll magically pick up that variable. So the function is like pasted in the new location. This makes it absolutely horrible to test, as behavior can be influenced in way too many ways.",2025-04-02 17:28:28,0,AnnoyedVelociraptor,programming
ml2hejj,1jpr7gf,reddit,Ruby needs static typing and it needs it like yesterday.,2025-04-02 18:43:58,0,DonaldStuck,programming
mkuelqe,1jou5al,reddit,[https://www.linkedin.com/company/wrenai/](https://www.linkedin.com/company/wrenai/) keep up with what's trending now..not sure why i cannot put links in the original post :|,2025-04-01 12:19:03,-2,expatinporto,programming
mkpfwse,1jo4eih,reddit,">In the current LLM landscape, money simply can't buy you speed

It's called RTX5090. WAY faster than the Tesla T4's you get on AWS.

Hell, even RTX3090 is faster than T4. That was 2 generations ago.

I know because I run models both on 3090's locally, and on Telsa T4's on AWS. They run much faster on my 3090s locally, than on Tesla T4's on AWS. (DeepSeek, Gemma, llava~)",2025-03-31 16:13:01,4,Takeoded,programming
mkth8t6,1jo4eih,reddit,"As a general idea, it makes sense.

But this is A LOT of costly compute and engineering just so the end user can type a command instead of clicking a button.

Maybe the example is just very simple and there are more complex operations that deliver better value.

Hard to see there being significant uptake, has there been?
If there are things that it’s commonly used for, might that not be a strong signal that the UX around those operations is not very good?",2025-04-01 06:47:32,1,seanamos-1,programming
mkougbz,1jo4eih,reddit,Author of the post here - this is one of the best things we did to make our chat bot nice and snappy - keen to hear everyone else's hacks to get these products to feel more conversational!,2025-03-31 14:24:50,1,Mysterious-Aspect574,programming
mkpjmyr,1jo16p3,reddit,"Neither the name, the banner, nor the title of this post tell us what it is. After opening the link I understand that ""shs"" stands for ""Simple HTTP Server"" - but this is not an obvious standard acronym and I initially thought it was a shell or something like that.",2025-03-31 16:31:42,6,somebodddy,programming
mkuanbr,1jo16p3,reddit,"OG Creator here. The user did not do a good job when promoting my app. Even though I highly appreciate it you can find a quick summary in this comment:

What is goshs?

​Goshs is a Go-based alternative to Python's `SimpleHTTPServer`, offering enhanced functionality and a user-friendly design. It supports file downloading and viewing, bulk downloads as .zip files, file uploads via POST and PUT requests with drag-and-drop in the web interface, and individual or bulk file deletion.​

Why is goshs unique?

In terms of security, Goshs provides several features that address limitations found in Python's `SimpleHTTPServer`. It offers Basic Authentication and Certificate-Based Authentication via Client Certificates, ensuring that only authorized users can access the server. For transport layer security, Goshs supports HTTPS with options for self-signed certificates, Let's Encrypt integration, or user-provided certificates. Additionally, it includes file-based Access Control Lists (ACLs), allowing for custom authentication per folder and the ability to restrict access to specific files.

How does it compare to others?

In contrast, Python's `SimpleHTTPServer` is intended for simple use cases and lacks robust security features. Discussions in the Python community have highlighted its vulnerabilities, such as following symbolic links that could lead to unauthorized data exposure. Furthermore, similar lightweight servers have been found to have directory traversal vulnerabilities, underscoring the importance of enhanced security measures in web servers. 

By incorporating these advanced security features, Goshs provides a more secure and versatile solution for serving files over HTTP/S compared to Python's `SimpleHTTPServer`.

Where can I find it?

Check out [https://github.com/patrickhener/goshs](https://github.com/patrickhener/goshs) and https://goshs.de. Be sure to leave a star if you like what you see.",2025-04-01 11:50:43,1,JohnnyTheSmith,programming
mkpxatu,1jo16p3,reddit,Nice work! There are loads of applications for something simple like this.,2025-03-31 17:39:26,0,kitd,programming
mklx27u,1jnop9o,reddit,Tiny typo clobber to cobbler,2025-03-31 00:27:31,1,timmyotc,programming
mki8r2v,1jn4o54,reddit,"Terrible examples. Just the usual medium slop articles.

That being said, concurrency in java is moving forward. I think after the structured concurrency moves out of incubation with java 25 we will see almost no need to rely on reactive programming patterns.",2025-03-30 12:09:52,8,kennyshor,programming
mkhjrxh,1jn4o54,reddit,Just awful examples of code. Who programs like that? This is probably entirely AI slop.,2025-03-30 07:55:23,2,audioen,programming
mka3th9,1jm6vgt,reddit,"> The key problem is that synchronous code can’t call asynchronous code.

Sure it can, it just gets a promise back.

The async stuff just breaks functions up into chained promise producers in order to avoid coroutines.

If you want to avoid that break up then the answer is to introduce coroutines.

But coroutines have their own issues.

Honestly, having been using asyncio in python lately I'm a lot happier with JS's existing approach.

Promises give a simple and powerful model and allow for things like marshalling across multiple calls.

I would like to see is better cancellation support however.",2025-03-29 00:28:46,5,zhivago,programming
mkda4i4,1jm6vgt,reddit,So... stackful coroutines?,2025-03-29 15:30:36,1,somebodddy,programming
mk9itw0,1jm4xe1,reddit,Neat. A website that charges 19€ a month for a timer that is over 100 MB in size and not even digitally signed,2025-03-28 22:30:37,8,AyrA_ch,programming
mk808pt,1jlxp2a,reddit,"My answer the question:  Nothing.

25 years of experience in a wide variety of products and industries and I've never heard of these.",2025-03-28 17:52:52,18,AmalgamDragon,programming
mk7w8ki,1jlxp2a,reddit,probably enough to memorize that's probably the only use case for the mediant (ctd fractions),2025-03-28 17:33:57,3,Embarrassed_Army8026,programming
mk6mgy8,1jllzqh,reddit,Just curious: Did you address any of the feedback you got on https://old.reddit.com/r/programming/comments/1j5jegi/i_have_created_a_local_web_server_and_environment/ ?,2025-03-28 13:48:22,2,jorygeerts,programming
mk0elxt,1jl3wgw,reddit,"I refuse to click this link. /r/programming has become
a cesspool of self promotion blog spam. It used to be informative.",2025-03-27 13:49:30,54,dex206,programming
mk0l5sd,1jl3wgw,reddit,"This article nails it. As devs, we’re not looking for fluff — we want clarity, examples, and answers to real problems. I like how it emphasizes writing with empathy: understanding what devs are struggling with and meeting them where they are.

One thing that stood out is the idea of *teaching through experience*, not theory. Curious—what blog post taught you the most as a developer?",2025-03-27 14:23:55,9,tomasartuso,programming
mk2b1p4,1jl3wgw,reddit,Step 1: Don’t choose a title that people are going to mock,2025-03-27 19:59:16,8,ScottContini,programming
mk0husm,1jl3wgw,reddit,"Great read, thanks for posting! Very useful for me especially, since I’m occasionally in need of reaching audience for my projects.",2025-03-27 14:06:51,6,faiface,programming
mk3q6gb,1jl3wgw,reddit,"I found this really helpful. Lately I've been feeling an itch to start publishing and putting my thoughts out there in some form. I've been thinking a lot about how to make something useful instead of just adding to the noise. The points about making your work Google-able and expanding your audience resonated with what I've been contemplating.


What tool/platform do you use that gives you those viewer insights shown in the article? That chart gave me second thoughts about pretending not to care if anyone reads what I write. I don't think I'll be selling any books, but it would be nice to know what does or doesn't find an audience. ",2025-03-28 00:24:33,2,MissEeveeous,programming
mk0as8s,1jl3wgw,reddit,"Author here.

I'm happy to take any feedback or answer any questions about this post.",2025-03-27 13:28:07,2,mtlynch,programming
mk1gc1f,1jl3wgw,reddit,Tl;dr?,2025-03-27 16:55:01,1,doesnt_use_reddit,programming
mk21c25,1jl3wgw,reddit,"I admit it - I did not read the blog post!

(Ok ok ... I actually did have a look after writing the above ...)

> The biggest bang-for-your-buck change you can make to a blog post is adding pictures.

So, pictures can be super useful. I have to say, though, on the blog post I found many images ... distracting. Using humour may be useful, but to me the same applies - images can be super-distracting.

> Even a terrible MS Paint drawing is more interesting than an AI-generated image.

Well, there are great AI generated images too. I think for any technical blog, it is best to focus on the core messages. For instance, take fefe at https://blog.fefe.de/ (it's in german only sorry). His blog is not primarily a technical blog, mind you; it is more a ""what is new in the world and what may be fun"", so it is more entertainment or infotainment. But sometimes he also blogs about technical aspects about Linux, glibc etc.. and these entries, even if many are a rant, are usually very informative and interesting to read. He gets away with zero images. And zero distractions really. So you don't need to use tons of images or mega-fancy styling. The **content** is by far the most important aspect really.",2025-03-27 18:33:53,0,shevy-java,programming
mk2p3hq,1jl3wgw,reddit,"I read it, so it checks out",2025-03-27 21:16:49,0,katafrakt,programming
mk6f57b,1jl3wgw,reddit,tldr,2025-03-28 13:06:12,0,mattkenefick,programming
mk3ny1l,1jl3wgw,reddit,To long didn't read,2025-03-28 00:12:15,-1,Lachee,programming
mjw1zmi,1jkeyek,reddit,">Once we get to the point where fluffy text is unnecessary, once we're all speaking business speak 2.0 and using the next terse generation of programming language with all the necessary patterns built in, we'll all be typing simple bullet points for everything, the world will be changed, and at that point LLMs may be entirely obsolete.

That's a bizarre take because it implies that there are only three uses for LLM's: generating text, summarizing text and coding. It's also completely unclear why the author thinks that programming languages will get dramatically higher level. The progress from low-level to high level has been excruciatingly slow and slowing down. What is going to change this?

There is no modern programming language that is dramatically more terse (in a useful way) than languages from 20 years ago.",2025-03-26 19:54:29,7,Mysterious-Rent7233,programming
mopcrk3,1k6e202,reddit,"“Aethr /ˈiːθər/“

This is some pretentious stuff. How do you pronounce that?",2025-04-24 00:15:03,0,Farados55,programming
mopammd,1k6e202,reddit,Looks interesting. You need to measure the accuracy across many models for this use case if you want people to use it in production. QA is deterministic. We can't use a test framework that gives us anything above 0% of error,2025-04-24 00:02:41,0,Positive_Method3022,programming
mogdv9t,1k59yvk,reddit,Product advertisement for yet another js Framework that adds insult to injury by being paywalled.  Thanks OP.,2025-04-22 16:27:12,1,church-rosser,programming
moe8q8a,1k4ypcf,reddit,"I see AI slop, I downvote",2025-04-22 07:36:37,2,clutchest_nugget,programming
mobt9wm,1k4piuh,reddit,"Hey look another AI code assistant!  How novel, and just what the world needs.

OP good job on building your app. Truly.  Just wish personally this sub had a no LLM related software spam rule.  However cool your code and app may be, this sub
is spammed relentlessly with LLM related blogs, adverts,
software all of which basically says and/or does similarly in terms of functionality.",2025-04-21 21:46:38,4,church-rosser,programming
mo8f2d1,1k43jpg,reddit,why not host this on [github.io](http://github.io) ? then you dont need to download the repo to be able to use it.,2025-04-21 10:15:54,2,padraig_oh,programming
mo4w2et,1k3rygg,reddit,"Wait, isn't Ctrl+P already a fuzzy finder",2025-04-20 19:06:25,7,AnonymousInternet82,programming
mnse8uq,1k291lu,reddit,MongoDB still exists?,2025-04-18 17:05:36,2,flying-sheep,programming
mnkss9b,1k1bnye,reddit,This appears to be a completely AI generated article.,2025-04-17 12:57:16,4,narmak,programming
mncj6l9,1k0abmy,reddit,"The name is too generic, you need to rename this",2025-04-16 02:59:47,6,KrazyKirby99999,programming
mndbed1,1k0abmy,reddit,Author clearly doesn’t know what react is or does,2025-04-16 06:50:45,2,therealdivs1210,programming
mncv9di,1k0abmy,reddit,"React alternative

Looks inside

Imperative DOM node builder

Might as well just use plain jquery and get some extra functionality too.",2025-04-16 04:26:20,11,Cold_Meson_06,programming
mnd13te,1k0abmy,reddit,"It’s more like an alternative to JSX or any templating language and not to React. 
Could be useful for people dynamically building DOMs from JS. It’s not for me though. I always preferred writing HTML templates in actual HTML.",2025-04-16 05:12:55,1,boblibam,programming
mn3ecnx,1jz35xi,reddit,"I work in a highly regulated industry. Our build pipeline is complex. We go through a lot of checks and they are constantly being updated. Our Jenkins server makes probably somewhere around 20-30 service calls per build. The chances of our devops team finding a way to bundle all of this up for local testing are slim to none.

Basically what I try to do for any new project is control what we can control as devs. Write a solid first set of unit and functional tests, create a blueprint for running those using our in house testing platform locally, and make sure to document the process for contributing. Document any other steps like linting they may need to do (do them automatically as a pre-push hook ideally as well).

If all of that checks out, we push up our code and pray. Hell, half the time, failures are due to one of the aforementioned service calls borking. And devs on our teams have to “wait” 10 minutes for a build, during which they will realistically likely often do other work, so be it. I’m personally not going to become the software engineer, devops super genius who eyes the pipelines for changes and tries to figure out how to test some new pipeline feature locally to save my company a few dollars.",2025-04-14 17:27:59,5,WriteCodeBroh,programming
mn34oef,1jz35xi,reddit,Never,2025-04-14 16:40:38,3,BloodySrax,programming
mn7h47y,1jz35xi,reddit,Can anyone remind me why we need a blog post to tell us that our code should be buildable locally?,2025-04-15 09:46:03,2,IanAKemp,programming
mn2u0fp,1jz1id7,reddit,"I'd argue that the main use case for virtualization is not isolation, but rather environment agnosticism.",2025-04-14 15:47:00,16,numsu,programming
mn2q8p6,1jz1id7,reddit,"Isn’t it already solved with containerization, with the added bonus that you can pick whatever language you want?",2025-04-14 15:28:08,12,RobespierreLaTerreur,programming
mn2xew1,1jz1id7,reddit,"The fundamental issue of trying to do isolation at the process level instead of the OS/VM level is that the OS hasn't been designed to keep *evil* processes completely separate from each other. For example, my process could listen to every port available on your computer.  Then when your process starts up, it dies because there's no port available. 


You can't put a check for this at the language level, because there's no guarantee that the binary I provide you with is ""honestly"" compiled.",2025-04-14 16:03:46,5,apnorton,programming
mn3ai23,1jz1id7,reddit,Modern cloud is built on top of the virtualization. That's how AWS or Azure or Google cloud works.,2025-04-14 17:09:22,2,Significant-Park-345,programming
mmw0eai,1jy4ohx,reddit,Isn't it just LSPs but with a reverse shell baked in.,2025-04-13 12:59:42,2,No_Nobody4036,programming
mmx43bx,1jy4ohx,reddit,"It's a buzzword, simple as that.

*""standardized way of working with data sources""* ... what standard? We're talking about text for crying out loud.

We know how to work with text. We know how to query text from a database, an API, or a filesystem. We know how TF:IDF works. We know how to do trigram similarity. We know how to search semantic embeddings.

None of that is new. None of that needs some breakthrough, new standard, that would just be a wrapper over existing, more battle tested standards. It's a layer of abstraction that exists because...yeah, why? Because we need to abstract already well established abstractions, because it's for AI now?

Does this make anything faster? Does it make things more secure? Does it make things easier to grok and maintain?",2025-04-13 16:39:29,2,usrlibshare,programming
mmurebd,1jxz46h,reddit,"No, I won't subscribe to your shitty newsletter.",2025-04-13 05:48:27,8,atika,programming
mmj9hcz,1jwkx92,reddit,"This seems mostly Captain Obvious stuff to most developers, namely:

1. Pick good defaults; know your audience.
2. Make it easy for the user to know how to change them if and when needed.

None of these goals are controversial; the controversy is in how to achieve them, such as what's good user interface design.",2025-04-11 09:23:07,4,Zardotab,programming
mmf8p2w,1jw1okb,reddit,"Why not inline ASM it? This is really just a pedantic difference, and you can easily implement it in c++.",2025-04-10 17:35:50,11,Tm563_,programming
mmfulfk,1jw1okb,reddit,theres really no reason at all for rust to exist,2025-04-10 19:22:42,0,nemesit,programming
mmfpf5s,1jw0slg,reddit,"One thing I read once very roughly:

For web browser... the webserver provides a list of urls (grouped by bandwidth required). The browser downloads the first and N subsequent ones and starts playing the first. At the end of the first it switches to the second, already downloaded, file. If the ""future"" downloads are going slow/stopped, the browser will start downloading the low bandwidth files and showing them.

So all in all it's kind of a giant hack. Split the video into files, each 10 seconds long, and have the browser switch between them. Viola! Seamless playback and seamless switching to lower bandwidth when your connection sucks.",2025-04-10 18:56:45,1,rbobby,programming
mm0y85m,1juc1wo,reddit,"Oversimplified. Sure, best practices are guidelines and not strict rules. Genious. /s
However you will always have deadlines and it is the most damaging if you shit on design principles when starting a project. So yeah, find the balance, but don't follow this article",2025-04-08 12:50:00,1,Sedenic,programming
mlwipxr,1jtr3kp,reddit,"> Their managers desperately try to redirect them to work that does make money, causing a long frustrating power struggle

What kind of manager has so little control that their dev is just working on whatever they feel like, and attempting to tell the dev what to work on leads to a power struggle?",2025-04-07 18:17:50,24,dw444,programming
mlwkjcy,1jtr3kp,reddit,"This article lost me at...

>They throw themselves into various pieces of work that don’t make money (improving FCP performance, better screenreader support, refactoring)

That's like saying, ""Sweeping the floor of your restaurant isn't profitable"", ""Washing dishes, isn't profitable""

Granted a product doesn't need to be the top of every benchmark, but god forbid anyone show pride in their work.",2025-04-07 18:27:08,28,xitiomet,programming
mlwhzhv,1jtr3kp,reddit,Capitalism good. Motivation bad.,2025-04-07 18:14:06,3,turbothy,programming
mlweooi,1jtr3kp,reddit,"Water is wet and if tech debt was water, you're very wet.",2025-04-07 17:57:27,6,Pure-Huckleberry-484,programming
mlwvjb8,1jtr3kp,reddit,"I agree with the takeaway for engineers, but I think this article is framing it wrong, sure engineers shouldn't just work on whatever they want and ignore their managers and business needs, but some of those things like cleaning up tech debt are crucial even at smaller companies for long term growth. I noticed the article also leaves out even more important but also low visibility tasks like bug fixes, security and privacy fixes, etc.

So, I think the real problem is the visibility of our work. It has become a required skill as an engineer in order to survive to make ourselves more visible. But I haven't heard a convincing argument as to why this *should* be our responsibility other than the fact that short term and career driven thinking has taken over business culture in the past decades (probably thanks in part to MBAs and giving more power to shareholders to sue CEOs).",2025-04-07 19:23:46,1,keylimedragon,programming
mlukdxx,1jtirjg,reddit,"""how to recover lost code/files"" is gonna be a gold mine in SEO",2025-04-07 11:50:10,7,freecodeio,programming
mm6k8ul,1jtirjg,reddit,Isidor here - author of the blog post. If you have any feedback or questions let me know and I will be happy to answer. Thanks!,2025-04-09 09:06:11,1,isidor_n,programming
mluvzll,1jtirjg,reddit,90s MS mode: C++ extention now disabled for VS Code forks,2025-04-07 13:10:40,0,Cube00,programming
mlcp8sl,1jr8cuu,reddit,In Brazil engineering managers are mostly non software engineers who are good at socializing. They can't wait to increase their bonuses by replacing developers by AI,2025-04-04 10:39:52,4,Positive_Method3022,programming
mlcrwr7,1jr8cuu,reddit,"article makes some wild assumptions, 

you cant blindly trust ai code as LLMs by definition are non deterministic...",2025-04-04 11:02:57,3,aookami,programming
mle44ws,1jr7n31,reddit,Great title OP 👏.,2025-04-04 15:47:15,8,dstutz,programming
mldtgw4,1jr7n31,reddit,"When I installed the Arm 64 Deb on a Raspberry Pi 5 via Package Install it complained about a missing file. But when I tried running it, it seemed to work and I got the What’s New in March Tab.",2025-04-04 14:54:16,1,davidhbolton,programming
ml4feea,1jq4grr,reddit,"The wrinkle with this is that, new gods don't come around all that often.  Or perhaps they do, I'm a heathen, what do I know.  With tech though, we have a nearly endless supply of hype.  I for one, am glad I didn't put too much into blockchain for instance.",2025-04-03 00:45:52,28,Cyclic404,programming
ml51aky,1jq4grr,reddit,Man if you took like a couple hours at most with any moderately sized code based you would understand that llms are light years away of being able to operate on their own,2025-04-03 02:58:54,12,aookami,programming
ml4ntpi,1jq4grr,reddit,"Am I seriously underestimating the skill needed to use AI, or is there really just not that much to learn?

There are a few workflow things depending on Cursor or whatever you use, but the actual process doesn't have a lot of deep skill. It's just prompting, describing your code, and making it fit within whatever system Cursor uses.

And even if there was skill at that, you'd have to relearn it every time a new Cursor-like comes out. It's not learning a whole new paradigm, it's just learning a new IDE.",2025-04-03 01:35:26,8,oadephon,programming
ml50df4,1jq4grr,reddit,It's just called programming.,2025-04-03 02:52:45,3,blafunke,programming
ml4f3hu,1jq4grr,reddit,[deleted],2025-04-03 00:44:05,13,N/A,programming
ml4xmug,1jq4grr,reddit,"A few of the key problems with Pascal's Wager apply to Kerrick's Wager just the same:

* Who says that the true god is one that sends you to heaven or hell based on the stipulations espoused by abramic religions? What if there is a god that sends you to heaven for enjoying life and to hell for following the abramic rules? Or said differently, what if the Hindus are right and you should follow _their_ tenets to enjoy a quality afterlife? The problem with Pascal's Wager is that there are many rulebooks about how to get a nice afterlife (one could say, in fact, an infinite amount, but at the very least there are multiple major religions) and these rulebooks clash. So which one do you follow? Pascal's Wager ends up trying to contrast a positive infinity (you go to heaven) against negative infinity (you go to hell because you followed one religion's rules at the cost of not following another's)?


Pascal's Wager's key logical error is that it ignores the fact that many religions exist. And Kerrick's Wager is logically a nice-sounding pile of bad reasoning for the exact same analogous reason: It fails to acknowledge that more than one career exists.

__The job of 'managing a fleet of AI coding agents' is very different from 'write code'. And it won't be the only job for humans that exists in a world where AI coding agents exist and are decent. Who says that the 'manage a fleet' job is what you are good at in this world? Why not another amongst thousands of other career options? What made 'manage fleets of AI' so special?__

Why not learn to bake artisanal cakes? The logic that you use to 'make the positive EV bet' __also works here__. It's also a positive EV bet to learn how to bake artisanal cakes according to its logic.

Sure, it's somewhat more likely that, given your background as a coder, you'd be faster at becoming a self-taught AI manager, and probably better at it too than an average human, vs the 'artisanal cake baker' career path. But then, if we must posit that AI based coding agents are good enough to significantly endanger your future career, I think it's rather weird to assume that the job of 'AI manager' is not significantly at risk of being taken over by AI. The increased odds you'd be a good AI manager are countered by the increased odds that job is irrelevant due to AI.

I think if you're really worried about swiftly being relegated to the status of 'horse' in a world where cars exist, then you should think about which job is highly unlikely to be AI-ified, and start spending your limited time self-teaching that one.",2025-04-03 02:34:58,2,rzwitserloot,programming
ml51tdr,1jq4grr,reddit,"So the blog post itself seems to have little content aside from being a proxy for Steve Yegge’s fantastic prediction that there will be a huge market for his company’s products in the future and everyone should buy, buy, buy. And I don’t want to create a new thread for Yegge’s post so I will just write my response here: whatever happened to the Mythical Man Month? 

Why does Yegge apparently think that AI just makes it obsolete? In other words, even if a junior developer can actually manage 100 AI agents productively, who says that will help the company achieve its goals any more than suddenly hiring 100 new human developers would, putting cost aside? Your average company’s ability to improve its products is simply not bound by the amount of code it can write, in fact that’s such an absurd strawman that I have trouble believing Yegge himself believes it.

It’s well known that (in, let’s say, the pre-AI days, if we grant the premise) a company of 5 could easily build an MVP product that would blow a legacy product with 100+ devs out of the water for some specific use case. The reason isn’t that they’re better devs, but that a legacy product has so many dependencies, chiefly on a business level, that the 100+ devs are basically sitting around doing nothing because every one-line code change has a massive potential set of repercussions.

Now imagine each of those 100 devs has access to 100 AI agents round the clock. What changes? If anything the problem gets worse, because the dev now can’t even make a case for his own code. He effectively becomes like his scared manager who has no way to know if the smallest code change will cause a massive shitstorm, because he didn’t write it himself.",2025-04-03 03:02:27,2,huyvanbin,programming
ml5q4v4,1jq4grr,reddit,Your comparison to pascal's wager is apt and a useful way of thinking about it.,2025-04-03 06:18:02,1,pobbly,programming
ml68iwy,1jq4grr,reddit,"or you can learn to read the hype cycle and make better judgments in the future if something is worth exploring 

a good place to start is Computer Chronicles - News show from the 80s, 90s and early 2000s

  
[https://www.youtube.com/@ComputerChroniclesYT/videos](https://www.youtube.com/@ComputerChroniclesYT/videos)

Here I learn that the 80s were business application hype cycle - calendars, email clients, office suits etc  
The hype was killed in 95 because Microsoft had Windows and Office

or that Machine Learning in the 80s was called Machine Reasoning

Learn to read the hype BS and you will have much easier time working with tech - no FOMO, no FUD",2025-04-03 09:32:05,1,gjosifov,programming
mkvsuji,1jowl8t,reddit,"We need a new GUI-over-HTTPS standard. [DOM keeps failing us ](https://www.reddit.com/r/CRUDology/comments/10ze9hu/missing_or_defective_gui_idioms_in_htmldom/)and can't be fixed without breaking backward compatibly.

The addiction to eye-candy and UI gimmicks & fads also needs a fix. Remind the customer that ""beauty has a price"". Rather that sticking every fancy pluggin into the stack, creating long-term maintenance headaches, the industry needs a Just-Say-No campaign. The chimp-like urge to judge books by covers is jacking up maintenance costs. 🐵

(I'm focusing on ordinary business and administrative applications here, not say e-commerce where the store front has to be esthetic.)

I've seen plenty of GUI apps from the 90's that do their job perfectly fine, despite ""looking old"". The only reason they get replaced is that existing staff doesn't know the tool(s) (or they were built by amateurs who didn't understand the value of maintenance, but that's not the fault of the tool, even though it often gets blamed.)

**COBOL lives largely because eye-candy-addicts don't fuck with it**, keeping it predictable and stable.

And YAGNI still matters. You likely don't need ""web scale"" if you just use the damned RDBMS right. Too many do ""resume oriented programming"", collecting buzzwords like Pokemon.

P.S. Gittoff my lawn!",2025-04-01 16:58:32,5,Zardotab,programming
mkv6dwb,1jowl8t,reddit,"Sadly, all software is a treadmill.  I'm not saying that to complain,  We knew that walking in.  It's the nature of corporate software -- new releases, new fixes, never enough time, don't worry about security, until it breaks, then fix is yesterday.

We knew that.  And we're paid for athletes.  If you didn't, I'm so sorry because you were sold a bill of goods.",2025-04-01 15:02:44,3,Rich-Engineer2670,programming
mkuuqix,1jow09j,reddit,"Great joke, stupid clickbait title.

He set a school's printers to display the text ""insert 5 cents"" as a joke. It happened years ago. He didn't get fired.",2025-04-01 14:00:17,24,OkMemeTranslator,programming
mkv33vf,1jow09j,reddit,"I pranked a colleague of mine back the day. I managed to put my own code on his computer while he went to the bathroom. 

Had the computer open his CD—ROM tray and ask him to insert his coffee.",2025-04-01 14:45:44,2,razordreamz,programming
mkuxsdl,1jow09j,reddit,good one.,2025-04-01 14:17:20,1,EnGammalTraktor,programming
mkoipif,1jo2dxr,reddit,I don't understand why Bob Martin is taken seriously. This is like when Bill Nye debated a creationist.,2025-03-31 13:19:26,76,McHoff,programming
mkpalsb,1jo2dxr,reddit,"Read John Ousterhout's book. Period.

Robert Martin is good for beginners. But SOLID should never be taken as a revelation - as some people try to sell it.

I must admit though that Uncle Bob's biggest achievement is the DIP (dependency inversion principle), because that's the ""rule"" that wasn't there before and yet it's a fundamental principle for Hex Architecture.",2025-03-31 15:46:49,23,steve-7890,programming
mkqpk8b,1jo2dxr,reddit,Uncle Bob is the Deepak Chopra of  IT.,2025-03-31 19:59:37,3,florinp,programming
mkp4oj0,1jo2dxr,reddit,John will most likely mop the floor with Bob,2025-03-31 15:16:57,2,imdibene,programming
mkqwpsm,1jo2dxr,reddit,"I don't have a book but I have a blog. Does anyone want to roast my articles? Not the one about globals, I knew very few would enjoy that one https://codestyleandtaste.com/",2025-03-31 20:34:56,-1,levodelellis,programming
mkp9s2l,1jo1uer,reddit,"# News Flash

piping arbitrary code to `eval` enables running arbitrary code. Let's assign this a fucking CVE",2025-03-31 15:42:41,3,scratchisthebest,programming
mkoiau5,1jnxwjm,reddit,"Surprised there is not complaint about going from an amazing programming language like C# to a shit one like JS.

Having to write a monstrosity like:

> interface DiffDialogProps {
    diffFile: string | undefined;
    onSetDiffFile: Dispatch<SetStateAction<string | undefined>>;
}  
export default function DiffDialog({ diffFile, onSetDiffFile }: DiffDialogProps)  {

instead of something simple and clean like this:
> public Component DiffDialog(string diffFile, Dispatch<SetStateAction<string>> onSetDiffFile){

Is what frustrates me the most about learning React/TS/JS after being mostly a pure C# full stack dev.",2025-03-31 13:16:58,1,71651483153138ta,programming
mkqgm6d,1jlstu5,reddit,Aspire needs to be more Enterprise-capable.,2025-03-31 19:15:12,1,Donphantastic,programming
mjwzh7k,1jko7h9,reddit,"Damn, I half expected to appear on the leaderboard lmao",2025-03-26 22:36:37,3,Isogash,programming
mjxd9l6,1jko7h9,reddit,Wait. This isn't r/programminghumor,2025-03-26 23:49:55,1,johnnybu,programming
mjta520,1jk84k0,reddit,"Some issues:

1. Don’t recommend setuptools to newbies: It’s slow, has decades of cruft in its docs, and creates a bunch of intermediary junk that needs to be cleaned up or .gitignored (while other build backends like `hatchling` don’t create any temp files in the project directory)
2. The invocation in the end `python setup.py build` is both deprecated and in this case nonsense: No `setup.py` exists here and none should. Instead build using `python -m build`
3. Don’t manually upload with twine, use [Trusted Publishing](https://docs.pypi.org/trusted-publishers/) it’s easier and less messy.",2025-03-26 10:59:31,5,flying-sheep,programming
mo9kwtw,1k4e521,reddit,"I don't disagree in principle, but I would caution that this approach has the effect of *massively* complicating your application. The number of places where things can go wrong has exploded, along with potential costs.

Take this approach when you need it, avoid it when you do not need it.",2025-04-21 14:55:09,3,gredr,programming
mo9slw5,1k4e521,reddit,"If you need to rely on large CSV files, you have made architectural mistakes a long time ago.",2025-04-21 15:33:44,2,ZirePhiinix,programming
mo2ejqn,1k3i9i6,reddit,Nice implementation! Can you give me some real world examples where this would be most useful?,2025-04-20 09:36:10,-1,wardrox,programming
mo48ul6,1k2zpp9,reddit,Where are the videos before episode 162? Might actually look into it but wanted to start with the first video.,2025-04-20 17:04:15,1,extractedx,programming
mnw9cg5,1k2r3ez,reddit,"There are a lot of various (and occasionally bizarre) topics covered in this post... but very little on what ""creative coding"" is actually supposed to be.",2025-04-19 08:07:07,7,pip25hu,programming
mnr6i8z,1k24n5l,reddit,"Speaking as someone who has been around a while, what companies even have DBAs anymore?

Most companies just YOLO their data out into a cloud database and press the ""more bigger"" button when it gets slow. But maybe I'm used to a much more agile kind of organization?",2025-04-18 13:20:20,11,roxm,programming
mns1pfk,1k24n5l,reddit,"DBAs? Hard time? In our company DBAs are so few and far between that our team doesn’t even get one! They said, “take care of your DBs yourselves” so one of our devs who knows a lot about DBs is now reluctantly called our “DBA”. And no, he doesn’t give us any hard time.",2025-04-18 16:02:35,5,Linguistic-mystic,programming
mnr9ihw,1k24n5l,reddit,Make the indexes I need and we can talk.,2025-04-18 13:37:43,1,dethswatch,programming
mnvem2b,1k24n5l,reddit,you guys have dbas?,2025-04-19 03:27:36,1,No_Technician7058,programming
mnj6on3,1k14817,reddit,"I guess the author has never heard of OLMo. Open source AI does exist, it’s just currently not as performant as more secretive closed weight and open weight models.

https://en.wikipedia.org/wiki/Allen_Institute_for_AI",2025-04-17 04:27:45,45,sluuuurp,programming
mnjcoy0,1k14817,reddit,"OP your article is flat out wrong lol. You seem to have focused on only the really popular, *heavily marketed* models and companies that even my grandma knows about. No, these labs obviously aren't going to open source their models. The money they spent on marketing didn't come out of thin air.

In addition to AI2's OLMo, there's also HuggingFace's [SmolLM](https://huggingface.co/blog/smollm) which is fully open source.  This includes both the data pipeline and model design, and yes, it means you can train an equivalent model from scratch.",2025-04-17 05:17:46,24,NamerNotLiteral,programming
mnjbsks,1k14817,reddit,"
> What is openly available with DeepSeek’s R1 model is not the source code, nor the training runbooks, and not even the training data. No, just like so many of its predecessors (like Meta’s Llama models, the Mistral Mixtral models, and Microsoft’s Phi models), DeepSeek simply released the network weights for R1.

I think the author missed the detailed research paper, multiple demonstrations with open data sets, and detailed instructions and documentation.",2025-04-17 05:09:56,24,omniuni,programming
mnj9xhk,1k14817,reddit,There is no AI,2025-04-17 04:54:03,15,underwatr_cheestrain,programming
mnjli7d,1k14817,reddit,This article is 90% nonsense. I weep for human journalism,2025-04-17 06:40:57,5,SmolLM,programming
mnjty2g,1k14817,reddit,">So, in short, because it’s nearly impossible to understand how a “black-box” Large Language Model works by only looking at its weights, distributing the weights alone does not make it “open source”. Users do not have the freedom to study these systems, they do not have the freedom to change the way the models work, they do not have the freedom to fix bugs nor submit patches, and they do not have the freedom to truly control the software they use that integrates with LLMs.

It's nearly impossible to do anyway even if you do have the code used to train. Explaining why an LLM reached a specific decision is an open problem being addressed by a niche field called explainable AI (XAI). There's also the massive economic cost of retraining the model to address architectural flaws that can make it impossible for even the developer to fix bugs, because they've already spent an absurd amount of money. 

Even if you open source the code you'll still have those problems.",2025-04-17 08:07:42,1,plenihan,programming
mnkrbne,1k14817,reddit,There is no open source encryption either because I don't have access the the private key from which you build your public key.,2025-04-17 12:48:36,0,somebodddy,programming
mnjb1m9,1k14817,reddit,"This brings the question - is using books/OSS code/... to teach humans the same as training LLMs? If I learn some nice tricks from glibc code, and use that to create proprietary code - how is that different from using LLM to generate it? We probably really need to rethink the whole copyright paradigm (and consider, if it even makes sense anymore, as is)...",2025-04-17 05:03:30,-6,andree182,programming
mn218gw,1jyyjcu,reddit,"Author here. I'd love to hear the community's practical experiences with this challenge. Some specific points I'm curious about:



1. Traditional documentation often fails to capture the ""why"" behind architectural decisions - how are you handling this with AI tools in the mix?



2. Have you found ways to document context that work well for both human developers and AI assistants?



3. For teams using AI coding assistants regularly - what workflows have you developed to prevent knowledge loss?



I'm particularly interested in hearing from teams that have found sustainable ways to integrate AI tools while preserving institutional knowledge. No promotion intended - genuinely looking to learn from others' experiences.",2025-04-14 13:12:56,1,traderprof,programming
mmwia35,1jy4six,reddit,AI slop,2025-04-13 14:45:15,2,MechanicalHorse,programming
mmut5pv,1jy0cnb,reddit,Don’t tell this guy about opaque pointers,2025-04-13 06:04:56,3,hellishcharm,programming
mmuv3jw,1jy0cnb,reddit,"The POWER of OOP in 2025 is that OOP languages happened to be the first to do abstraction, polymorphism and modularization back when computers were the size of a car?",2025-04-13 06:23:49,1,asbjohe,programming
mmuorwm,1jy0cnb,reddit,"Half my code is just lines of list comprehension and lambda functions, who says OOP is dead? Also, who gives a fuck?",2025-04-13 05:24:42,1,TheGayestGaymer,programming
mmurd8p,1jy0cnb,reddit,Why not embrace both this tech segregation is killing me softly (awesome song) 🥲,2025-04-13 05:48:10,1,F0x_Gem-in-i,programming
mmqev9k,1jxhpil,reddit,"""After experimenting with these techniques for several weeks, I eventually packaged them into a tool called Giga AI (It’s paid, because I need to eat). """,2025-04-12 13:56:23,66,BenchOk2878,programming
mmqejn5,1jxhpil,reddit,"""understand"" is the operative word here. AI doesn't understand anything. It's a lot more than a mental model that's lacking in there.",2025-04-12 13:54:33,56,Synaps4,programming
mmqpygg,1jxhpil,reddit,"Seems kind of a weird article. Some good points about AI not understanding code-bases. Then some shoe-horned attempt at trying to force it into understanding it, while still addressing the elephant in the room: LLMs cannot reason, and there is just a limit to how much we can force it into behaving as if it reasons about a codebase.

When the context grows too large, it just fails. That is why you can define working sets in current copilot for example, to force it into a smaller context window. It works ""okayish"".

Seems like kind of an ad for yet another underbaked LLM layer",2025-04-12 14:57:57,7,MaDpYrO,programming
mmqikao,1jxhpil,reddit,Dunno that i can fault the AI for a problem that many humans have.,2025-04-12 14:17:09,1,dethb0y,programming
mmqrfcv,1jxhpil,reddit,"Isn’t this a problem that is being solved by Cursor Rules, or Copilot Custom Instructions, etc? 

It’s just adding system prompts with information about the application, implementation details, and architecture to every prompt.

Not sure I agree about companies being incentivized not to solve this problem because they make money selling tokens. That’s always been a failing strategy. Solving problems for people is how you make money.",2025-04-12 15:05:53,0,andlewis,programming
mmqibff,1jxhpil,reddit,"“Act as a principal architect who is an expert at communicating with LLMs. Summarize the attached codebase in a way that’s easy for an LLM to understand. Work out a way to organize the context in a way that is easy for an LLM to track as we make changes. We are going to update these contexts, where applicable, on each change using the roo cline. The purpose of this is to give the LLM the context necessary to better understand all of the context of my codebase”

I would put in my custom instructions to roo cline with the names of my current context tracking files. I would ask the LLM to update those files, add additional files if necessary, and update my custom roo cline instructions. 

Now my LLM has a super charged way to track the total context of my codebase as it goes. It’s customized to my codebase. It’s updated on every change. It doesn’t require you to pay for an additional tool. 

Context is still tricky in vibe coding. The solution is the same as all other vibe coding issues, figure out how to get the LLM to solve its own problems.

If I were doing this for real, I would type faster and leave all of my typos in. I find that the LLM works harder when it has sloppier input. It’s probably a function of the tokens being slightly different.",2025-04-12 14:15:46,-16,wtjones,programming
mmmy0r6,1jx169n,reddit,I chuckled about the fact that Uncle Bob would include autobiographical stuff in a book about the giants of the trade.,2025-04-11 21:56:36,2,pylbh,programming
mmfwife,1jw6472,reddit,Yuck a paywall.,2025-04-10 19:32:05,3,black_hat_cross,programming
mlpitur,1jsonbq,reddit,This is an example of an IDE class hierarchy.  No programming happening here.,2025-04-06 15:02:55,5,church-rosser,programming
mlqdphz,1jsonbq,reddit,"Oh, it's v 2",2025-04-06 17:48:45,1,KianAhmadi,programming
mlpxgso,1jsonbq,reddit,garbage ad,2025-04-06 16:22:49,1,zzzthelastuser,programming
mlg4apw,1jrls3j,reddit,"To save people time:
-------------------
Why do we need modules at all?


This is a brain-dump-stream-of-consciousness-thing. I've been
thinking about this for a while.


I'm proposing a slightly different way of programming here
The basic idea is


    - do away with modules
    - all functions have unique distinct names
    - all functions have (lots of) meta data
    - all functions go into a global (searchable) Key-value database
    - we need letrec
    - contribution to open source can be as simple as
      contributing a single function
    - there are no ""open source projects"" - only ""the open source
      Key-Value database of all functions""
    - Content is peer reviewed
-----------------


The answer for the separation of concerns is well documented, but here explanation:


For any k > 2:


k-clause-DNF is NP-complete
k-term-DNF is NP-hard.


If you can get your depenancies into a DAG, expressly in a horn clause, dependancy hell can be avoided.


While anyone who has had experience with balls of mud codebases or even enterprise service busses knows the above, the reality is that separation of concerns is fundamental to writing maintainable code.


The above musings would set any code in absolute stone, and requires all projects to be fully productized and externalized.


There is a reason containers are popular, they are just namespaces, which are just modules.


It removes the cost of coordinating changes in a global namespace with every single development group.


I don't care what Suzy in accounting does with their foo() interface if I am in shipping().  And there is no value in exposing her implementation details either.


Nor do I want my work blocked by her legacy needs when I need to adapt to customer visible needs 


I get that decisions on how to modularizing components are challenging, and context dependant.


But modules really are the least worst option.",2025-04-04 21:58:07,2,gdahlm,programming
mlg7z5a,1jrls3j,reddit,Micro modules but worse.,2025-04-04 22:19:38,1,shizzy0,programming
mkoxzjj,1jo3tll,reddit,"This is a horrific dystopian way to do software development. The reason why engineers do not share every single detail they work on is because stakeholders do not understand them. And when you start involving people with things they do not understand, bad things are going to happen. Successful organizations have to trust that their engineers do the right thing without status updates

And then the audacity to ask ""Why do teams resist transparency?""",2025-03-31 14:43:05,2,Loves_Poetry,programming
mknan3d,1jnv0ro,reddit,"Indeed. Building / organizing the frontier URL queue for crawling at scale is quite challenging. Also, a nice crawler will not flood a site with HTTP GETs in a short span of time -- at most a page every 10 seconds or so. So to scale, crawlers will often hit multiple (thousands of) sites concurrently (usually using non-blocking network i/o). I've heard Google only needed a handful of such crawlers.",2025-03-31 06:42:00,3,gnahraf,programming
mkmyh9y,1jnv0ro,reddit,Scrapper is not the same as scraper.,2025-03-31 04:46:56,2,m9dhatter,programming
mkkqjlu,1jnkfxt,reddit,"why don't i use ai for my ai, so i can ai while i ai? Let's build it, give me 50 million in startup money.",2025-03-30 20:25:12,3,todo_code,programming
mjvb5x8,1jkhj52,reddit,[deleted],2025-03-26 17:44:18,9,N/A,programming
mops4yt,1k6fu9p,reddit,Don’t really feel like creating an account just to figure out how you ballparked your 10x claims,2025-04-24 01:44:17,2,vision0709,programming
moj298g,1k5m8pr,reddit,Oh my God. Enough with the AI articles already. I swear you lot are so much worse than the blockchain people ever were.,2025-04-23 00:42:45,12,CanvasFanatic,programming
moje1mn,1k5m8pr,reddit,"Fuck that. I don't want the perception of shit. I want working code.

Man, first fucking block chain then this. I can't wait for us to move on to the next dumb ass technology.",2025-04-23 01:52:05,3,a_printer_daemon,programming
moj935f,1k5m8pr,reddit,"This is the first time in a while where an article on r/programming  about AI wasn't generated by AI (poorly) and wasn't just a shitty attempt to pimp some AI startup through reverse psychology. So that's nice.

The paper itself studies an interesting subject: ""What factors do software developers use when assessing trustworthiness."" But the conclusions are pretty weak: ""Developers like it when the AI's suggestion is correct and comprehensible."" I guess a paper like this can at least remove doubt that the obvious answer is accurate. Step 1: make the AI actually work right. Step 2: don't make the AI not actually work right.

The other conclusion, that developers aren't very good at assessing the maintainability of code at first glance, is also pretty weak. ""Short term is easy. Long term is hard."" Yeah okay. Kind of felt like that one was pretty tautological.

I was hoping to see, but didn't see, a comparison between the dynamics of trusting AI code vs the dynamics of trusting human code. Maybe it's not as relevant to the audience of this paper, but I wonder if this paper might not even necessarily have anything to do with AI. It's just about how humans assess code and happens to be made relevant because now there's a new business for selling code generation services.",2025-04-23 01:22:49,2,GregBahm,programming
mog22t1,1k57cct,reddit,"Q: What are ORM's?

A: Pain in the Asses. 

Gotta be a better way.",2025-04-22 15:30:21,3,Zardotab,programming
mog99gt,1k57cct,reddit,What are ORMs. It literally says what they are in the acronym that names them.  What else needs to be said?,2025-04-22 16:04:43,1,church-rosser,programming
mo8zmaq,1k4c7g8,reddit,"Some serious timecube energy here. Maybe it just all went over my head, or maybe you're just having a hard time communicating clearly what's going on, but also maybe you've had a stroke.",2025-04-21 12:56:02,3,gredr,programming
mo9oxsl,1k4c7g8,reddit,"You used a lot of words (possibly AI generated) to describe what the software structure is, but not what it does. And you didn’t provide a GitHub link so it’s not like we can ready the code to understand. 

Sorry to say, but it’s not a very comprehensible article.",2025-04-21 15:15:27,2,Zambeezi,programming
moa0mrt,1k4c7g8,reddit,Gibberish word salad.,2025-04-21 16:27:45,1,church-rosser,programming
mo8d0dh,1k49nuc,reddit,"TLDR mock services. So not integration tests, only as good as the mocks, and prone to rotting.",2025-04-21 09:55:17,26,Rhoomba,programming
mo8dwm7,1k49nuc,reddit,Wix might be one of the worst codebases to exist from how huge and clunky their websites are,2025-04-21 10:04:24,11,freecodeio,programming
mo8fecn,1k49nuc,reddit,Sounds like you just created unit tests with mocked services. They don’t actually “integrate”,2025-04-21 10:19:06,6,New_York_Rhymes,programming
mo8e931,1k49nuc,reddit,AI generated F1 car with tiny human wasn’t my bingo card.,2025-04-21 10:07:52,1,0xdef1,programming
mo8ifer,1k49nuc,reddit,"How do you test nonsensical (syntactically or/and semantically) SQL generated by your app? Or how the latest DB migration affects the existing code? Or how application behaves after a huge refactor?

Switch from integration -> unit seems to work only for managers, who does not develop code anymore and they prefer fast execution over correctness and confidence during development",2025-04-21 10:47:35,1,Revolutionary_Ad7262,programming
mo8ndxb,1k49nuc,reddit,https://boycottwix.org/,2025-04-21 11:29:33,0,freefallfreddy,programming
mmuy19u,1jxzoji,reddit,It's an ad. ,2025-04-13 06:53:04,3,Wonderful-Wind-5736,programming
mmum4w9,1jxzoji,reddit,I understand nothing of German besides Un dosh heighch Eeeerika,2025-04-13 05:02:02,1,coyoteazul2,programming
mmlj2yj,1jwvfsz,reddit,"Eh, I just dont agree. Just because you can't recall exact facts from something you read, doesn't mean it doesnt soak into your subconscious and help you solution or intuit in the future.

The brain isnt just some fact recalling machine, it has many layers beyond our conscious experience. Why do you recall things hours later without trying? Because there are subconscious processes working in the background.",2025-04-11 17:34:23,19,rdubya,programming
mmlnqoi,1jwvfsz,reddit,You aren’t a strong reader are you,2025-04-11 17:57:00,3,Used-Rip-2610,programming
mmlmp3n,1jwvfsz,reddit,"The author of this article seems to be really bitter toward readers in general. I can’t tell if they’re mad at themselves for not finishing books or if they’re angry at a coworker with the nerve to read in their spare time. 

I’m not a “gotta be productive all the time” kinda guy, though. I read tech books because I enjoy tech books. I enjoy hearing how others solved problems and I enjoy hearing about new concepts and ideas. I don’t feel like I have to be “making progress” when I read a book. 

Reading alone won’t make you a competent software engineer but it’s odd to think it serves zero purpose. I’m often left just sitting and assimilating what I’ve read. Thinking through what was presented and basically just assimilating the concept of it. You can get years of hard-earned knowledge that took other people a lot of mistakes to learn in just a few minutes this way.",2025-04-11 17:51:55,5,Dismal_Boysenberry69,programming
mmlp7km,1jwvfsz,reddit,"Right when I started my software development career (after 20+ years in the military), someone recommended reading “The Pragmatic Programmer.” I read that book cover to cover, yet it hardly had any directly actionable examples, just lots of pretty sound advice, from very granular to macro, career-making stuff. 

I didn’t read it to come away having memorized all of its content. I read it to try to get a feel for the types of things, the kinds of insights, that might be valuable to me as I went about my journey. It was revelatory in many ways, and I have reread it, and the updated 20th anniversary edition, several times the last two decades. 

You can, in fact, read a book like this as if it’s fiction, knowing full well it is definitely not, and be richly rewarded for assimilating new perspectives you can use for the rest of your life. In this example, I totally disagree with the author. Do what works for you and what brings enjoyment. Not everything has to be transactional. What a petty, myopic, joyless way to go through life, much less a career in software development.",2025-04-11 18:04:13,2,TestFlyJets,programming
mmlpkxm,1jwvfsz,reddit,"> If you are not going to apply the knowledge right away, it is mostly useless.

This is not true at all and has literally never been true. At least not for me. Everyone learns differently, but I can almost guarantee if you are only learning something new when you need to solve a specific problem, you're going to be missing *something*. And usually, you have no way to know what until you stumble across it.

If you only ever learn in order to solve a current problem, you are not equipped to face new problems or innovate. Learning how to do a task is only one kind of learning, but you also need to learn how to approach problems, how to assess multiple options, how to come up with solutions on your own. Hell, just reading for the sake of it is still learning, because the very act of reading is a skill that can be improved. If you think you have no room to improve on your reading skills, you aren't reading enough.

I would argue that if you are never learning just to learn, reading to read, thinking to think, you are the one trapped in an endless cycle of ""How do I do X?"" Look it up, do it, repeat. You will be faced with a situation where the concepts and solutions you find do not fit your specific problem, and if you aren't capable of pivoting and trying something else you are going to have a bad time. Any competent developer, software engineer, etc. will have this skill, I'm sure you do as well even if you dont realize it. It would be impossible to survive in tech without being able to adapt. And that ability? It comes from absorbing other information. Reading about some new tools, hearing about a problem someone else had, even just going about your life can give you insight into things you would think are completely unrelated.

Even this post, you wrote this article to share an idea. For many people, the guilt and pressure of reading to learn, or even just reading nonfiction, may not be something they even realized was a problem, or maybe written it off. Perhaps reading this article would help people realize this is a problem, and they *can* do something about it. But the very same article discourages this exact type of reading and learning. There is certainly not anything in this article immediately useful or actionable to me, because this isn't a problem I face. But it has led me to think about something I probably wouldn't have otherwise, and that is useful in its own right, and why I would disagree with this premise.",2025-04-11 18:06:05,2,eldritchgarden,programming
mmifbff,1jwegdm,reddit,Article is paywalled. 😞,2025-04-11 04:26:08,9,MPGaming9000,programming
mmigngp,1jwegdm,reddit,"If you wrote this, know that the slab of AI garbage art at the head of the article makes me question your judgement as well as your taste. 

You chose something that doesn’t represent the problem, or even spell it correctly, when you could have chosen a clear diagram that actually communicates. 

I don’t trust you. This is unlikely to be the outcome you had hoped for.",2025-04-11 04:37:05,27,JaskoGomad,programming
mm0vzh5,1ju9zit,reddit,"I hoped to get something there, but it was just that we used JSON and not using JSON is faster. Like I get it but it does not help when I am already using LLM as they were intended. This is not even scratching the surface on how you can optimise your LLM call.",2025-04-08 12:35:49,1,skuam,programming
mm0dsd1,1ju9zit,reddit,"Author here!

Expect loads of people are working with LLMs now and might be struggling with prompt latency.

This is a write-up of the steps I took to optimise a prompt to be much faster (11s -> 2s) while leaving it mostly semantically unchanged.

Hope it's useful!",2025-04-08 10:13:02,1,shared_ptr,programming
mlc39lq,1jr5iy3,reddit,"    sealed interface Membership permits Gold, Platinum, None {}
    
    record Gold() implements Membership {}
    record Platinum() implements Membership {}
    record None() implements Membership {}

In times before even Java 8, this would probably have been ""public enum Membership { GOLD, PLATINUM, NONE; }"". Some might argue it would still be. For some reason, the article considers the alternative to this to be a String type, which it would not be in reality. This entire article reads like AI slop to me. I don't think it reflects any actual practice of any living person.",2025-04-04 06:49:58,12,audioen,programming
mlc8atd,1jr5iy3,reddit,"Hot take: using system.out.println() in “test code” leads to using system.out.println() in the production code. And having to go back and manage those or erase them.  

Much better to always just start with stuff being printed out via a logging levels system. Even if that logging system is printing to the terminal and not to a file. Still beats the other way. One quick configuration and all printed output can be totally removed. Instead of: “let me search through my code base and find all the lines with the …” no.",2025-04-04 07:42:21,2,this_knee,programming
mkventz,1joyjx5,reddit,"Article only talks about commercial tools.  Open source tools are conspicuously absent, despite being more likely to survive the next AI industry [bust cycle.](https://wikipedia.org/wiki/AI_winter)",2025-04-01 15:45:34,3,ttkciar,programming
ml4qm07,1joyjx5,reddit,This breakdown was helpful,2025-04-03 01:51:44,1,getyourslopoffmyfeed,programming
mkklxlg,1jnimsr,reddit,"This concept of Literate Development matches my own experience of problems fully automating development. I like the docs, then tests, then code approach and I can apply it on my own workflows.

I have heard of iterating on the docs before and after this reaffirmation, I’ll set up my systems to iterate on feature definitions before picking one to run with. (Currently I just request a task description in a single prompt with some context but no iteration.)

Thanks, great article.",2025-03-30 20:01:52,1,InformalOutcome4964,programming
mkhismi,1jn74da,reddit,Didn't you post this already?,2025-03-30 07:44:43,8,Melodic_Duck1406,programming
mkhoete,1jn74da,reddit,"
 * Get to the point: Ensure the title and first three sentences clearly answer if the article is for the reader and what benefit they will gain. Use relevant topics and terminology.
 * Think one degree bigger: Consider a broader audience for the topic to potentially increase reach with minor adjustments.
 * Plan the route to your readers: Choose topics that readers are likely to find through Google search or other platforms. Consider relevant keywords.
 * Show more pictures: Incorporate visuals like photos, screenshots, graphs, or diagrams to enhance engagement.
 * Accommodate skimmers: Use headings and images that are interesting enough to capture the attention of readers who skim content. Avoid large blocks of text.",2025-03-30 08:47:23,3,flavius-as,programming
mkelsmn,1jmuclc,reddit,"Usual reddit - instead of celebrating an achievement, they are putting you down.",2025-03-29 19:47:45,-20,avaneev,programming
mk7rrjg,1jlygi7,reddit,https://github.com/thames-technology/monads,2025-03-28 17:12:44,6,kaancfidan,programming
mkbs7xh,1jlygi7,reddit,"It never ceases to amaze me how little thought most language developers give to error handling. Makes me appreciate Java’s checked exceptions all the more. Rust is also decent with its question marks, but its `try` blocks are not stabilised yet and, yes, ideally the question marks should be omittable too. Other languages feel like a wasteland of bad error handling. When you have to manually expand

    r = f(g(x));

into

    r0 = g(x);
    if (r0.isErr()){…
    }
    r1 = f(r0.get());
    if (r1.isErr()) {…
    }
    r = r1.get();

that’s just weak language design.",2025-03-29 08:24:40,2,Linguistic-mystic,programming
mko1st9,1jlygi7,reddit,"No matter how bad you think your language's error handling scheme is, it's not as nearly as bad as introducing another error handling scheme and arbitrarily have some functions use one while other functions use the other.",2025-03-31 11:21:59,1,somebodddy,programming
mkoay9y,1jlygi7,reddit,"it is not a rust solution. It is a mathematical pattern named monad. It was developed for Haskell and added later to many languages.

So maybe rustify is not a correct name.",2025-03-31 12:30:04,1,florinp,programming
mjzxh5q,1jl20u5,reddit,"DX: Flutter

Maintainability: Flutter

Jobs: RN",2025-03-27 12:04:53,2,mpanase,programming
mjva715,1jkh97i,reddit,"You can in fact Google Select, as you had proved to the person giving you terrible advice. 

It is in fact not a sign of development ability to not have every method of every language and it's tooling memorized.",2025-03-26 17:39:47,13,tripledjr,programming
mjvck89,1jkh97i,reddit,"This is really dumb. Nobody has the entirety of a language memorized, and needing to google something to remind yourself of the syntax is totally okay. I mean, wtf?",2025-03-26 17:50:47,6,adreamofhodor,programming
mjve8pp,1jkh97i,reddit,"it comes and goes with use. I've probably forgotten more bash than most people know. If i haven't used it in a while, damn skippy im googling for basic syntax and shit because the only thing worse than getting it completely wrong, is getting in 95% right and wasting time figuring out what's wrong with that 5% because i was too proud to double check the docs for ""For""",2025-03-26 17:58:36,5,granadesnhorseshoes,programming
mjvar6i,1jkh97i,reddit,"Hard disagree. I work in 3 different programming languages depending on the day, and I am sure as hell not memorizing the exact details of the standard libraries of all three.


Brain space should be dedicated to important concepts and mental models, not to stupid minutiae that can be looked up in seconds or conjured by a LLM.",2025-03-26 17:42:24,11,zjm555,programming
mjyq936,1jkh97i,reddit,"I feel like I've gotten different advice, more in the direction of ""you should know how to Google, but especially how to Google well"" - if it takes you 1 search and all of 2 minutes to find an answer, I don't think it's a problem. As everyone has been saying, memorizing every little bit of a language isn't super reasonable, what matters more is understanding the design and purpose - knowing what to build is the first step, then you can figure out how to build it",2025-03-27 05:04:57,1,Own_Variation2523,programming
mohbn6l,1k5dyzg,reddit,"For most people, the answer is “no”.

For people in some specific contexts, the answer is also “no”.",2025-04-22 19:10:54,15,the_bighi,programming
mohfkem,1k5dyzg,reddit,"Normally I would say this is not a good idea.

Having worked on multiple legacy codebases now where multiple teams set out to rewrite everything in a new framework but stopped somewhere in the process and now the whole application is one repository that is three different Frameworks Held together by ducktape I am thinking like, yeah, for this it would have been a good idea.

I would not give each microfrontend a separate backend though. No matter if the backend is micro services or monolith, it should be sliced based on business logic rather than on what pages exist on the UI.",2025-04-22 19:30:22,2,Rainbows4Blood,programming
moh9t2o,1k5dyzg,reddit,No.,2025-04-22 19:01:42,2,NotTheBluesBrothers,programming
mohauze,1k5dyzg,reddit,Absolutely not. NEXT!,2025-04-22 19:06:59,2,axiosjackson,programming
moh9jba,1k5dyzg,reddit,Soon to find out...,2025-04-22 19:00:23,1,build-0752409548e6aa,programming
mohab18,1k5dyzg,reddit,Great read. Thanks,2025-04-22 19:04:12,1,pag07,programming
mohgizx,1k5dyzg,reddit,Did this article really suggest writing 3 separate services for front end in 3 different frameworks. With entirely different ways of doing things.,2025-04-22 19:35:12,1,Farados55,programming
mohbyt2,1k5dyzg,reddit,I’ve been saying it for years; anyone still writing monolithic front ends is living in the 20th century.,2025-04-22 19:12:29,-7,Western_Bread6931,programming
moa6bil,1k4hyxp,reddit,"Non-clickbait title would be, “is my AI-generated code ethical?” Sudoku doesn’t enter into it.",2025-04-21 16:55:53,12,pdxbuckets,programming
moaazy3,1k4hyxp,reddit,"Claude's ToS say they assign the rights ""if any"" to you. ""If any"" is an important caveat though, as not all outputs may be copyrightable in the first place.

[More detailed discussion here](https://terms.law/2024/08/24/who-owns-claudes-outputs-and-how-can-they-be-used/)",2025-04-21 17:18:21,2,marquoth_,programming
moa5ije,1k4hyxp,reddit,[deleted],2025-04-21 16:51:58,1,N/A,programming
mnzu2qc,1k36eno,reddit,"Why we don’t reinvent the wheel:

No CSRF checks

User name is an XSS hole, printed without escaping after login. Also other XSS holes throughout

Email validation is ancient, just test send an email

PHP sessions bad and stateful, don't scale

I encourage readers to find more security holes because they’re there lol",2025-04-19 21:54:22,6,FourSquash,programming
mny013k,1k2z3fc,reddit,"fuck langchain, seriously it's a dumpster fire.",2025-04-19 15:55:48,5,pydry,programming
mmxca7r,1jybm5s,reddit,"tldr: he has the LLM generate summary documetation of components of his codebase in a structured way on different topics like ""dataflow"", ""security"" etc 


It dramatically improves performance 



Much like a human faced with a huge codebase the llm does much better once there's a bunch of summary documentation about the system it can keep in mind when working on specific parts ",2025-04-13 17:21:17,10,WTFwhatthehell,programming
mmxrfdd,1jybm5s,reddit,And yet we have so many people out here arguing against documentation.,2025-04-13 18:39:22,3,pickledplumber,programming
mmxt8we,1jybm5s,reddit,Tell me you don’t know how LLMS’s work without telling me you have no idea how LLM’s work,2025-04-13 18:48:59,1,okiemochidokie,programming
mmxm9k7,1jy5vl5,reddit,If you're just going to use an AI voice and a slideshow why even use an Audio Visual medium to present?,2025-04-13 18:12:05,0,Biom4st3r,programming
mmuvya5,1jy165o,reddit,"Terrible title all around. .


By the way, yes, reliance on compilers leads to inefficient coding practices. Has nothing to do with being replaced. OSs do have overhead. Has nothing to do with being replaced. User friendly GUI absolutely does reduce programming skills (how many of us have a grandparent that can easily use a PC but wouldnt know the first thingabkut programming?). Nothing about being replaced. Offline/local software IS better than web. Nothing about being replaced. Frameworks and libraries 100% reduce knowledge and understanding of the core code.



This whole article is just a weak attempt to justify generative AI and if I'm being honest it really feels like it is copy pasta from CrapGPT",2025-04-13 06:32:16,72,VegtableCulinaryTerm,programming
mmv2ojo,1jy165o,reddit,"Every advance has made the industry larger and increased the demand for programmers. I would even say it has increased the demand for people with skills that are supposedly being replaced.

There are more people working with machine code than there ever were before assembly code was invented. Because there is high demand for computer chips, and multiple companies working on chip design.

There are more people working with assembly code than there ever were before the invention of compilers, because there are many programming languages and competing compilers/interpreters and advances in compilers and all of these things need programmers to work on them.

As programs get more high-level there are more people working at the highest level, because it becomes useful in more and more fields, but there are also programmers and engineers working to convert from each level to the lower one, all the way down to the silicon and metal.

With AI, there might be more non-programmers and low-skill programmers working on simple scripts to help them with their jobs, but there are lots of places we still need hard-core programmers. Plus all of these AI programming frameworks that are exploding, need someone to program them!

We all know that AI writes shitty code right now, but even if it gets better, there will still be a demand for programmers at every level.",2025-04-13 07:40:20,6,allergic2Luxembourg,programming
mmv476t,1jy165o,reddit,"""Many believed a desktop application working offline was better than depending on network connectivity to work""

Yes. It still is. I'd call it a braindead take to think otherwise, but that's an insult to people who are actually braindead. Any app that depends on internet connectivity is inferior to an equivalent non-dependent app. Internet connectivity can *enhance* the latter, but straight up dependence is ""mixing bleach and ammonia"" levels of idiocy.",2025-04-13 07:56:01,12,Muhznit,programming
mmv5mi0,1jy165o,reddit,Anyone worried about getting replaced by AI does not understand the value of an engineer. No amount of mystical technology can ever replace the need for people who can explore a problem and then describe its solution in such a way that even an idiot can do it.,2025-04-13 08:10:55,5,Sabotaber,programming
mmv1vno,1jy165o,reddit,"Garbage article. 

There are several attempts that could be listed, like cobol, uml and low code.",2025-04-13 07:31:56,9,geon,programming
mmuvult,1jy165o,reddit,"As a teenager, the program generator ""The Last One""  described in Computer Weekly almost convinced me that becoming a programmer wasn't going to be a possibility for me.

Add TLO and later 4GLs to the list.",2025-04-13 06:31:15,5,undyau,programming
mmwf3e5,1jy165o,reddit,"Ignoring the title, they were all correct.",2025-04-13 14:27:56,1,Timbit42,programming
mmzpd29,1jy165o,reddit,There are many veterans in my project who believe the cloud is very unsafe and we should not move to the cloud.,2025-04-14 01:22:15,1,Southern-Reveal5111,programming
mm82wud,1jv833f,reddit,"Can't view the website, being told that rate limits have been hit.",2025-04-09 15:13:21,4,MrKWatkins,programming
mm899ya,1jv833f,reddit,"Repost, [was posted here on monday](/r/programming/comments/1jtk7ky/the_best_programmers_i_know_matthias_endler/)",2025-04-09 15:44:48,2,syklemil,programming
mm847d3,1jv833f,reddit,Is this some form of rickroll?? :)),2025-04-09 15:19:46,1,lcserny,programming
mm8hal6,1jv833f,reddit,I'm now retired from computing and as a guy who generally finds these sorts of lists silly...  That's a pretty good list.,2025-04-09 16:24:19,1,haltline,programming
mm76z65,1jv45i3,reddit,Reads like an AI wrote it. Or am I getting too suspicious?,2025-04-09 12:19:38,6,english_european,programming
mm80k5m,1jv45i3,reddit,"The language used almost brought me a migraine. Zero substance, millions of fluffy words. 

I hope the site had ads, I could not imagine why else that *stuff* (I cannot bring myself to call it an article) exists.",2025-04-09 15:01:38,2,AlexKazumi,programming
mlwk2fc,1jtrrhs,reddit,"In that sense, a constructor in C++ also isn’t a constructor.",2025-04-07 18:24:45,5,ventus1b,programming
mlwgwoj,1jtrrhs,reddit,Python is not primarily related to programming BUT,2025-04-07 18:08:37,-12,BlueGoliath,programming
ml9k51u,1jqtlad,reddit,"TLDR using synchronized is probably fine (ignoring virtual thread pinning in JDK21 which has been fixed now I think), but don't reimplement the standard library.",2025-04-03 20:47:42,8,nekokattt,programming
mla8618,1jqtlad,reddit,"Atomic variables and atomic data structures only allows you to use some kind of predefined synchronized operations. It works pretty way for simple cases and often it is the best, but for more complicated one you need to use CAS loop and other atomic shenanigans, which is far more worse than the typical blocking concurrency 
  
I think it is just bad to flame one of a solution without any arguments from the other side. A good meritoric article should mention some arguments from `synchronised block lovers club` and try to meritoricaly justify it's nonsense.",2025-04-03 22:59:32,1,Slsyyy,programming
mk7kchx,1jlz4fv,reddit,[deleted],2025-03-28 16:37:30,3,N/A,programming
mjtulgi,1jk7bze,reddit,">Today, in most companies, our software teams are the bottlenecks!

Id Software in early 90s delivered 28 games in 5 years and 7 or 8 months in their after 9-5 work   
with 90s tech - not git, no agile etc with only 6 people  
""The Early Days of id Software: Programming Principles"" by John Romero (Strange Loop 2022)  
[https://www.youtube.com/watch?v=IzqdZAYcwfY](https://www.youtube.com/watch?v=IzqdZAYcwfY)

the only they all have in common is - they were building games for at least 10 years and they knew how to build games, unlike most people in IT today that are making decisions  


>Today, we're at the same crossroads with AI. Yes, AI-generated code mostly sucks right now. But, there will be a day soon when reviewing every line of code will be as outdated as checking compiled Assembly.  


The thing about high level languages and assembly is they are deterministic, miss a semicolon and you will have compiler error  
there isn't a compiler for the AI generated word soup and you can't build one, because AI generation it based on probability and statistics, not on predefined rules",2025-03-26 13:21:05,8,gjosifov,programming
mjt19ia,1jk7bze,reddit,Vibe managing when?,2025-03-26 09:35:20,7,tu_tu_tu,programming
mjtbtpc,1jk7bze,reddit,"Interesting to see the hallucinated world develop and articles about solving problems in that world which I liken to listening to Old Man's ramblings or reading Philip K. Dick's Valis.

> That’s why engineers were always in demand, and our salaries kept rising. Companies needed innovation and new features - and the only way to do that was to hire more software engineers. 

And anyone who studied CompSci knows about Universal Scalability Law and why that statement is completely wrong. I guess regular people can come to completely opposite conclusions the same way they did in WW2 thinking that improved helmets sending more soldiers to the infirmary was bad. This is why we study and learn the inner workings of our field to not be dumb.

> What does it mean for Engineering Managers.
You will become the gatekeeper

For a long time the skill of saying no to stupid demands was shouldered by good senior engineers, but some companies don't reward that so that's why they burn out and have a novice yes-man take the place. ""Become the gatekeeper"", sir you are 10 years behind, we already are the gatekeepers to stupid shit.

> But, there will be a day soon when reviewing every line of code will be as outdated as checking compiled Assembly.

But we still do that and it's not outdated if you want the vibes to actually run anywhere with good performance and no crashes. I've had to check JIT assembly of some Java code to realize that a change killed auto-vectorization in a loop and caused a perf regression.

> Thorough tests - integration tests matter more than ever.

With most _vibe_ folks advocating for using fancy LLM's to write their tests, i can see how that goes. I already see many cases of ""All the tests are green and no errors in the log, so the user must be wrong, everything works fine"", fortunately these engineers aren't operating an RBMK or really aren't engineers, that term is quite parasitically thrown around in our field. Software development is more craftmanship than engineering, unless your work is writing the same CRUD app with slightly different calculations on user load, etc.

---

Fortunately real coders have nothing to worry about. I've had to pick up more ML as part of my work recently, but half the science articles I've had to read have been of piss poor quality so I have no worries of anything conceptual changing in my lifetime. There are always those who try to _vibe_ out of life, do what others are doing, experimenting thoughtlessly and then there are those who study the field, see the foundations are quite stable and relax while sleeping because Freddy Kruger won't have our beds eat us at night.",2025-03-26 11:13:43,4,DualWieldMage,programming
mmn3w1a,1jx0gb9,reddit,"> Python is a fast-evolving language, especially in the age of AI.

AI didn't cause any of these deprecations, I promise you. But I hope randomly mentioning it helped you with your SEO.",2025-04-11 22:30:34,128,Booty_Bumping,programming
mmmozc6,1jx0gb9,reddit,"The random module is not outdated, it just shouldn’t be used for purposes where security matters. It is perfectly fine for things like games or simulations.",2025-04-11 21:06:48,146,slaymaker1907,programming
mmn78yr,1jx0gb9,reddit,"This was posted here before but removed by mods


https://www.reddit.com/r/programming/comments/1jwslqk/11_outdated_python_modules_that_you_should_never/",2025-04-11 22:50:44,10,__Blackrobe__,programming
mmms6i4,1jx0gb9,reddit,">Since Python 3.9, we can directly write type hints for these data types without importing them from the typingmodule.

No, this was not possible in Python 3.9, at least not when specifying the type parameters. It was introduced later, 3.10 I think. ",2025-04-11 21:24:14,23,Schmittfried,programming
mmnxmkf,1jx0gb9,reddit,"f-strings are bad for loggers, so stating they're a ""complete replacement"" is a lie...


```
log.debug('obj: {}', obj_with_expensive__str__)
log.debug(f'obj: {obj_with_expensive__str__}')
```

In the first line, the objects `__str__` method is not invoked when debug logging is off. On the second line, the string is always computed, even if there is no debug logging.

Sure it's an edge case, but there it is....it could be applied to any lazily calculated string and is useful when that lazy invocation is conditional.

You could also preface every log statement with a conditional to check if debugging is enabled, but who's got the time for that?",2025-04-12 01:34:13,5,TheCritFisher,programming
mmo33ie,1jx0gb9,reddit,"Ah yes, the first rule of the internet - farm engagement by posting wrong information!",2025-04-12 02:09:30,5,n_lens,programming
mmmx9qy,1jx0gb9,reddit,What’s the replacement for urllib.parse?  I agree for actual requests there are better choices but this one seems to just remain solved with urllib.,2025-04-11 21:52:24,3,tagd,programming
mmnriya,1jx0gb9,reddit,You’ll take pickle from my cold dead hands!,2025-04-12 00:55:14,4,Paratwa,programming
mmo1s73,1jx0gb9,reddit,I come from a dotnet world but I've been working in python for the past few weeks. I like the way it's easy to run but I feel very limited by the code navigation and debugging capabilities. I'm working in vs code. Are there better alternatives? Ideally with features similar to resharper,2025-04-12 02:00:59,1,TheBlueArsedFly,programming
mmu779g,1jx0gb9,reddit,"it is now paywalled

> Yang Zhou put this story behind our paywall, so it’s only available to read with a paid Medium membership, which comes with a host of benefits:

Well does not matter anyways, people could judge the quality just by reading the comments in Reddit and in the article. They would miss nothing important.",2025-04-13 03:06:43,1,__Blackrobe__,programming
mmeqy83,1jw0vfb,reddit,"Cursor devs knew they were violating the license and TOS but were ok with it as long as they were getting away with it.   Now that msft is calling them out on it they're finally acknowledging the issue and supposedly working on alternatives.  Cursor has a valuation in the billions, they aren't some tiny mom and pop underdog.",2025-04-10 16:09:28,36,CitationNeededBadly,programming
mmeohxn,1jw0vfb,reddit,"I'd like to urge anyone to actually watch this video in its entirety - He is giving some very interesting history and context to this. If Theo keeps making content like this, that isn't just reading out loud a newspost and some tweets, I am re-subbing",2025-04-10 15:57:22,16,Sheepsaurus,programming
mmesklb,1jw0vfb,reddit,honestly surprised they aren't more aggressive,2025-04-10 16:17:32,3,mungaihaha,programming
mmeud23,1jw0vfb,reddit,"RIP Moustache

Upd: ah, it's been a while, okay",2025-04-10 16:26:13,3,Strict-Criticism7677,programming
mmewlpw,1jw0vfb,reddit,https://www.gnu.org/software/emacs/,2025-04-10 16:37:16,-2,moreVCAs,programming
mmevbk6,1jw0vfb,reddit,Why’s he look so hot here?,2025-04-10 16:30:54,-2,derangedtranssexual,programming
mmaguik,1jvi3vi,reddit,">The last five years have shown us that large language models, like ChatGPT, Claude, and DeepSeek, can write code in many domains, to huge excitement: many claim to be using these models to write entire web servers and apps from scratch. These tools have opened up programming to a whole new class of people who consider themselves non-technical.

sure buddy",2025-04-09 22:16:10,6,moreVCAs,programming
mmafwkp,1jvi3vi,reddit,"Breaking news, llms understand average knowledge like nullability.

Almost as if they were trained on every public GitHub repo or something",2025-04-09 22:10:48,6,Lachee,programming
mm7r6cj,1jv6iwm,reddit,Need to create something new that isn't already in the LLM,2025-04-09 14:15:00,5,AdministrativeHost15,programming
mlpr1o3,1jswzj2,reddit,"""Heroism"" at work is just another name for management failure",2025-04-06 15:47:50,14,PainInTheRhine,programming
mlpwf6s,1jswzj2,reddit,Same. I work with a Superman and they take all the work that would let the rest of us actually learn and get to their level of domain knowledge. It’s made me very bitter against people who view themselves as the teams hero.,2025-04-06 16:17:09,5,kbailles,programming
ml6tlrb,1jqgqyy,reddit,"My concern here is that conversations were only 5 minutes long.

In Turing's original papers, the interrogator would have time to dig in with follow-up questions of the kind ""why do you think the author used this word and not that, in this line if poetry"".

In a 5 minute conversation with simulated typing delay, this kind of depth is simply not possible to reach.",2025-04-03 12:26:31,7,cazzipropri,programming
ml8pzbt,1jqgqyy,reddit,"There are many ways a Large Language Model can pass the Turing Test.

For example, both sides of the test might be Large Language Models. Then the Large Language Model would be unable to identify whether the Large Language Model is a human.

Another way a Large Language Model could pass the Turing test is by saying nothing. The person on the other side of the test would not be able to tell whether or not the Large Language Model was human.

A final way a Large Language Model could pass the Turing Test would be by providing output that would be indistinguishable from something a human might express. In that way, the Large Language Model could pass the Turing Test.

I hope you have enjoyed reading about the ways a Large Language Model could pass the Turing Test. Feel free to ask me anything, any time.",2025-04-03 18:18:56,-1,IdealBlueMan,programming
mkmufyy,1jnstjx,reddit,I think it's a bot.,2025-03-31 04:13:18,3,ntropia64,programming
mkmdsdl,1jnstjx,reddit,"""Motorola moto g play 2024 Smartphone, Android 14 Operating System, Termux, And cryptsetup: Linux Unified Key Setup (LUKS) Encryption/Decryption And The ext4 Filesystem Without Using root Access, Without Using proot-distro, And Without Using QEMU"" -- ""cryptsetup reencrypt"": https://old.reddit.com/r/MotoG/comments/1jkl0f8/motorola_moto_g_play_2024_smartphone_android_14/",2025-03-31 02:13:51,0,throwaway16830261,programming
mkpyjqx,1jn3aa6,reddit,"Gentlemen, when i heard about vibe coding you had my curiosity but now that i hear vibe containerization you have my attention.",2025-03-31 17:45:30,1,TachosParaOsFachos,programming
mkeu25d,1jmvb0c,reddit,I hope the person who coined that term has the opportunity to try their face vibing with a wasp nest.,2025-03-29 20:32:30,45,omniuni,programming
mkeyrzp,1jmvb0c,reddit,"Good common sense article. But can we all just agree that vibecoding is nothing more than a marketing buzzword. And stop talking about it?

You cannot build something without paying attention to the ingredients. Programming will become easier, sure, but the idea of throwing caution to the wind makes me shudder",2025-03-29 20:58:16,17,professorhummingbird,programming
mkggxhd,1jmvb0c,reddit,So basically you stole youtube-dl's source code and made a crappier YouTube downloader?,2025-03-30 02:19:06,1,BlueGoliath,programming
mkf6vsm,1jmvb0c,reddit,"Coincidence or not, I did the exactly same experiment last week. I spent around 3-4hours trying to make a NextJs app that downloads a YouTube video. After 2 hours, I realized I wasn’t getting anywhere. Same errors as described in the video. The difference is that I didn’t tried the python approach and neither I built for myself. I just gave up after realizing my anxiety span grew for these 3-4 hours",2025-03-29 21:44:20,1,AdministrativeCode25,programming
mkduab6,1jmr2eh,reddit,"I recommend posting this as a screenshot of the full-text post rather than a link, because people here won't engage with an X link post.",2025-03-29 17:19:34,24,atomic-orange,programming
mkdxha8,1jmr2eh,reddit,"There are full stack products. They’re called Wix, WordPress, etc. But obviously many engineers will not think twice about that.",2025-03-29 17:36:10,7,kebabmybob,programming
mkdyfwj,1jmr2eh,reddit,"IKEA furniture is the exact opposite of what he describes though, everything is included in the kit and it all fits together",2025-03-29 17:41:07,8,garloid64,programming
mkdxwy3,1jmr2eh,reddit,This is the same AI startup founder who just recently cursed us all with the “vibe coding” meme.,2025-03-29 17:38:26,13,Main-Drag-4975,programming
mke4qul,1jmr2eh,reddit,"Weird sentiment.
First of all it is still possible to upload a static web site to S3 bucket, create a dns for it and call it a day. If the web site is more complex, requires database, payments, scaling, etc, then of course you have to learn about those things, but I don't understand why is it attributed to the current period of time. As if you didn't need to learn how to spin up database and run migration scripts 10 years ago.",2025-03-29 18:14:16,3,bailingboll,programming
mkdzw6y,1jmr2eh,reddit,"Who is this person? Because with his talk of 'works out of the box' he misses a very very fundamental aspect treating software development like, well IKEA furniture. Developing software is not like building your sofa, it's like building a factory that will build sofas for other people. 

Completely flabbergasted, this is a kinder version of the 'smelly nerds' comment on the Twitter algorithm github. Making demands to make something simple to stoop it down to his level while we actually benefit from the level of choice it offers.",2025-03-29 17:48:33,4,Tackgnol,programming
mke1lr9,1jmr2eh,reddit,"I initially expected to read something about all the web devs now being redundant/replaced by AI, but instead found the post quite humble and inspiring. Indeed I think there is a lot of room for innovation to get your agent-powered IDE to talk to some service that generates all the infra he mentioned based on your code.",2025-03-29 17:57:27,2,Lopsided_Net_2534,programming
mke02yj,1jmr2eh,reddit,"I had a similar musing the other day. My personal website back in the 90s was a bunch of static files, and I could use notepad and ftp to do everything I needed to manage it. ""Deploying to production"" was ""ftp put \*"". 

My personal blog these days is a django + docker + supabase + sendgrid + aws + ... monstrosity because it has to be if you want to do a website. You can of course just use wordpress but that would feel like admitting defeat to me. I completely understand why most people would just spin up a WP blog but the fact that the DIY aspect is now the preserve of people with the time and skills to parse python error messages means something has been lost.",2025-03-29 17:49:32,1,Advanced-Essay6417,programming
mkdygld,1jmr2eh,reddit,"I’m glad that I learned web development in the era where it was normal to rent cheap shared hosting, upload some html & css files, and your website worked.

If your host supported PHP or Perl you could upload those files and they would also (hopefully) work.

We’ve made great strides in web development and the things the author listed are helpful ways to solve a lot of problems that existed. But the actual principals of getting a site to render at their heart are still really simple: [just send the browser some valid HTML](https://motherfuckingwebsite.com/).

I think it’s too bad that all of these extra layers feel like opaque barriers for new developers.",2025-03-29 17:41:13,1,MakesUsMighty,programming
mkcr1v2,1jmmdxm,reddit,"This reads very much like an LLM generated article, sorry. ",2025-03-29 13:40:41,17,fiskfisk,programming
mkkg8d6,1jmmdxm,reddit,The article does not say anything about how to solve cache validation issues. It is just a bunch of definitions (well written with examples though).,2025-03-30 19:32:17,3,Southern-Reveal5111,programming
mjzrlwu,1jl1eld,reddit,"So now we've got people who don't even know enough to ask AI a question properly trying to develop shit? Jesus Christ.


Software development has not hit its ""vibe coding"" (ugh) era. Dumbfucks have hit their ""fuck around, about to find out"" era. The absolute mess these idiots are about to make when all this shit falls apart hard...",2025-03-27 11:21:32,12,hinckley,programming
mk1qe0l,1jl1eld,reddit,"""vibe coding"" is this generations offshoring.",2025-03-27 17:41:49,1,vips7L,programming
mk4kqlc,1jl1eld,reddit,"Vibe coding works great for me in prototyping. As someone who has always worked in backend, I find it really hard to go through the entire frontend development cycle of design systems, designer and then having the requirements for frontend developers to start coding. For MVPs, I find it much easier to write a detailed prompt in a markdown file and have Cursor build the prototype with mock data. 

I have manually curl'd my backend API to get JSON for mocks and have cursor build the necessary tables to do CRUD operations on them. Then instead of drag & drop, its like telling Cursor to make changes.

Big fan of using AI for prototypes.",2025-03-28 03:23:48,1,N1ghtCod3r,programming
mjzq7i3,1jl1eld,reddit,Author here! Wanted to seek some opinions on this as I can’t be the only one who’s tried to level up my prompt engineering process using Claude Code / Cursor agent. Curious to hear if anyone has found approaches which work well for them 🙏,2025-03-27 11:10:18,-2,mi1hous3,programming
mjzr36j,1jl1eld,reddit,I have vibe coded a prompt. It is a particularly useful way to trim down several sentences into just what is needed. A cautionary note is that a model’s training set will cut off before the model is published so it won’t know much about its own capabilities. To resolve this you can add additional context to a prompt using the model’s own documentation.,2025-03-27 11:17:25,-2,InformalOutcome4964,programming
mo8eb71,1k40wwk,reddit,"If you actually enjoy writing articles, move away from generic stuff that has been done a million times before and doesn't really add any value from anything else already out there towards sharing information that actually benefited you in a real life situation.

""I had this problem, I took these steps and solved or mitigated the issue by doing X.""
Ideally with references to sources that helped you out.",2025-04-21 10:08:27,3,fxfighter,programming
mo6mjkx,1k40wwk,reddit,is this all ai generated?,2025-04-21 01:10:16,3,TheBlueArsedFly,programming
mo8m6tg,1k40wwk,reddit,"> ## Problems in This Design
>
> 1. **MacBook cannot use a different keyboard or mouse** (e.g., Logitech).

Apple would not see that as a problem.",2025-04-21 11:19:48,1,somebodddy,programming
mo1kn5i,1k3e0ax,reddit,Very important programming content.,2025-04-20 04:36:44,2,BlueGoliath,programming
mo1ndi0,1k3e0ax,reddit,"The readers should also know that the sample code in Github repo is ""Vibe-Coded"". The objective is to illustrate and not to build an enterprise class code. I hope the community is okay with the intent here.",2025-04-20 05:00:14,-3,shreesrinivasan,programming
mnm4mlj,1k1gr2t,reddit,medium 🤮,2025-04-17 16:58:49,12,SlovenianTherapist,programming
mnmfqpn,1k1gr2t,reddit,Medium 😅,2025-04-17 17:51:20,2,NorskJesus,programming
mnmhujx,1k1gr2t,reddit,Just call it Pithon,2025-04-17 18:01:20,2,zoqfotpik,programming
mne4aku,1k0i352,reddit,This was not a pleasant read.,2025-04-16 11:35:13,6,FroggyWinky,programming
mne8llo,1k0i352,reddit,we don't give a f about figma anymore. Next they're gonna trademark words Scale and User,2025-04-16 12:05:48,1,CatolicQuotes,programming
mnehe4t,1k0i352,reddit,OP posted a bloated advertisement masquerading as a blog article.,2025-04-16 13:00:04,2,church-rosser,programming
mm6j0ul,1jv0qns,reddit,"AKA how to shoot self in foot before even starting.

great job OP, you win the hourly prize for yet another useless LLM post largely unrelated to programming.

At this point we can we safely assume that 9/10 an 'AI' related post to r/programming is likely SPAM and/or Karma Farming. Hopefully a mod bot comes along sooner rather than later to take out the trash.",2025-04-09 08:52:51,3,church-rosser,programming
mlu0191,1jtfrzd,reddit,"An interesting take and as usual avoids declaring some of the key assumptions, imho, of all of these types of takes. 


That your team is high quality engineers that don't require supervision and take deep technical responsibility across the entire development stack they might affect. 


Oh also you've built a comprehensive CI/CD / automated testing system the developers use, extended where required and maintain.


I roughly agree with the main conclusions but just don't find them to be realistically possible beyond a single app / team scale. I also think most people don't realize the range of quality you end up working let alone having junior engineers on a team who need mentorship or those mythical 10x people who like to do impromptu refactors over the weekend that add no value.


Gates are important if you care about quality, stability and performance. Sometimes feature delivery is more important then all three but thats a debt trade off you should be aware when making.


This article is the kind of advice you get from hack scrum / performance / productivity people your company hires to ""increase developer productivity"" and squeeze a few more widgets from your team.",2025-04-07 08:33:13,9,Dannyforsure,programming
mluh2o0,1jtfrzd,reddit,"That's how you get 30 commits from an intern that only says ""fix"", and he accidentally used the shortcut of his IDE to auto-format the whole project around the tenth one, but his IDE has a custom formatting configuration that doesn't match the project intended formatting rules.",2025-04-07 11:23:50,4,Blue_Moon_Lake,programming
mlu15pb,1jtfrzd,reddit,The pacing of this is way to slow. Your audience for an article like that does not need a long explanation what a typical git workflow is.,2025-04-07 08:46:11,1,Bananenkot,programming
mlealt7,1jretb1,reddit,Not opening a link for something with such an over the top title,2025-04-04 16:19:44,6,238_m,programming
mlfgutg,1jretb1,reddit,Is this a personal blog with ads. Wtf. How do I permanently block forever?,2025-04-04 19:53:44,2,JohnDavidJimmyMark,programming
mkuvc6k,1jovve4,reddit,TL;DR: The author's never heard of technical debt,2025-04-01 14:03:44,14,chintakoro,programming
mktb8tp,1jonj2c,reddit,"You forgot to hit the ""start"" button on your time machine.",2025-04-01 05:45:39,2,BlueGoliath,programming
mknwikm,1jnzyt4,reddit,"Want read, no want watch",2025-03-31 10:35:56,6,onomatasophia,programming
mncdfqy,1k08guk,reddit,"Pretty much all their examples are vulnerable to simple injection attacks:

    fetchUser(userId).then(user => {
        container.innerHTML = `
          <div class=""user-card"">
            <h3>${user.name}</h3>
            <p>${user.email}</p>
          </div>
        `;
      });

In React this would be equivalent to ""dangerouslySetInnerHTML"". Which as the name implies, is dangerous. By the time you get these code examples up to production standard, you'd have re-invented a front-end framework but worse. 

Most of their other examples are non-sequiturs. Nothing about Vue or React stops you using JS modules for example.",2025-04-16 02:23:39,3,sylvanelite,programming
mnc6po0,1k08guk,reddit,"The amount of maual input validation for JS is ridiculous if you actually care about undefined values. JS just too much work, use TS to check parameters for you.",2025-04-16 01:42:40,8,BoBoBearDev,programming
mnc3j9t,1k08guk,reddit,"sure, we could all attempt to cross the ocean in a rowboat

but why the hell would i want to? React, jsx, and ts are **hot fire** and i'm not convinced by your ""hidden costs"" arguments when the **actual costs** are so very visible in doing raw js and dom manipulation in 2025

The 30 seconds it takes to create a new vite app, and have actions automatically deploy it and its storybook to gh-pages pays for itself within the first hour of hacking on a project",2025-04-16 01:23:34,28,pampuliopampam,programming
mnc5c0a,1k08guk,reddit,Maybe he means you should know vanilla js before using frameworks…,2025-04-16 01:34:29,1,Skinner1968,programming
mncaktd,1k08guk,reddit,">and why you might want to


Imma stop you right there. I do not want to.",2025-04-16 02:06:02,2,MyDogIsDaBest,programming
mnddms6,1k08guk,reddit,"In case the author of that medium article is reading this:

*Your article is paywalled. I cannot see it without first creating an account on a third party site.*[1]

For authors, their biggest problem is not ""people reading my blog post for free"", it's ""people not reading my blog post at all"".

I *want* to read your thoughts on this. Luckily, there is no lack of quality writing on this topic, on the web.

-------------------------------------------------------------------------
[1] Whatever happened to [POSSE](https://indieweb.org/POSSE)?",2025-04-16 07:13:40,2,lelanthran,programming
mnc52gn,1k08guk,reddit,a better post for r/frontend,2025-04-16 01:32:54,-6,jseego,programming
mnc5cx6,1k08guk,reddit,Thanks for the high quality programming content.,2025-04-16 01:34:38,-10,BlueGoliath,programming
mmxjwtl,1jyddbb,reddit,"Maybe if you have to enforce using the tool that supposedly makes work easier and makes people more productive, MAYYYYBE MAYYYYBE MAYBE it means that the tool is just shit?",2025-04-13 18:00:00,8,agares3,programming
mn0tg6m,1jyddbb,reddit,Yeah nothing better when my manager who doesn't know shit about code tells me that I should use AI. 🤦,2025-04-14 06:39:27,3,Eastern_Interest_908,programming
mmxw22o,1jyddbb,reddit,"I see it as sort of a repeating cycle of a Parable of Two Programmers and this is just the next iteration. If you use AI  to generate slop for 1000 story points / tickets it tends to be more rewarded than taking the time to fully understand the problem and solve it in the simplest way, especially if you're doing it in isolation.


That being said, I do think AI is super useful (next iteration of google / stack overflow at a bare minimum) but it's also best when self directed. If you have to explicitly ask if people are using AI to judge them then it sounds like you don't really know what you want out of your programmers.


I also think management should understand it's a two way street for AI and be careful what they wish for. There a lot of creative ways as programmers that we can use AI to solve non-coding problems too.


- Do I really need to listen on zoom to the execs at a meeting when I can get it transcribed with whisper while doing something else?
- Maybe I haven't had the confidence to ask for a raise but I'll let ChatGPT pump me up and help generate metrics plus a proposal for me.
- Is management trying to add in nonsensical policies but it takes a lot of energy to argue with them? Maybe I'll generate a 100 page well sourced document to argue with them and spare myself the trouble.",2025-04-13 19:03:53,1,rdux4,programming
mmk8zm4,1jwq29z,reddit,Why are you asking me to travel through time???,2025-04-11 13:46:27,5,AgoAndAnon,programming
mmkcxga,1jwq29z,reddit,"The article makes a somewhat compelling argument that go is a better starting point that node/django, but it doesn't really address the comparison to other statically typed backend languages.


Still a decent argument, but it would apply to a whole class of backend frameworks (compiled, gced languages) rather than go only


> Go (or Golang, same thing)


Oof, them's fighting words",2025-04-11 14:06:41,3,desmaraisp,programming
mmosq72,1jwq29z,reddit,"Less magic is good for learning.

Less magic is good when you're workmates love building layers and layers of abstractions.

Node, python, ruby and friends are still faster to develop on, because of the abstractions.",2025-04-12 05:22:15,2,sM92Bpb,programming
mmexx0x,1jw1scu,reddit,"Clickbait gonna clickbait. But no, chatbots do not understand our world. Hell they barely understand their own, their context is laughably small and they lack all of the fundamental things needed for comprehension at a human scale. 

Essentially, they are just really good mimicry devices and even then I would accept the debate on “really good”.",2025-04-10 16:43:43,8,charrold303,programming
mmfix60,1jw1scu,reddit,"It's not a much more interesting question than if a tape recorder listens to music or if a submarine swims but if you do want to say they understand it seems to me that you're committing yourself to a functional theory of mind where (roughly) replicating the brain's output is enough for some kind of consciousness, because it's a certain fact that they don't understand through the same mechanism brains do and arguably to some kind of Berkeleyan idealism where the knowledge you have doesn't have to connect with an empirical world which embodied brains do but not LLMs.",2025-04-10 18:24:55,7,sisyphus,programming
mmeuyjj,1jw1scu,reddit,"Is there even a debate?

You'd have to define ""understanding"" very very loosely to claim Chatbots understand anything, and then I'd argue that definition almost certainly would also apply to Google search.",2025-04-10 16:29:08,7,EliSka93,programming
mmexfau,1jw1scu,reddit,Do we?,2025-04-10 16:41:19,0,YoungestDonkey,programming
mmes3yt,1jw1scu,reddit,Who do you think won the debate?,2025-04-10 16:15:15,-3,IEEESpectrum,programming
mld9t2c,1jrb8tg,reddit,What did you find confusing about it?,2025-04-04 13:08:04,5,cokeplusmentos,programming
mldd76v,1jrb8tg,reddit,"Are you familiar with MDN?  They already have an article for this (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all) as well as just about anything else you could ask for. 

I applaud your instinct to share information with all of us, but MDN is the de facto documentation for vanilla web technology and is—no offense intended—a better explanation than your Medium article.",2025-04-04 13:28:08,3,GrandOpener,programming
mld8vd8,1jrb8tg,reddit,"Promise.all specifically? A whole article for that?
Crazy.",2025-04-04 13:02:20,4,N0Religi0n,programming
mld9nzp,1jrb8tg,reddit,"Sometimes promises can be confusing when you first start. This is a good, brief, explanation of how promise.all work.",2025-04-04 13:07:12,1,couchjitsu,programming
mldbri6,1jrb8tg,reddit,"`Promise.allSettled()` is the winner, albeit with a slightly clunky API.",2025-04-04 13:19:47,1,axonxorz,programming
ml0yzmv,1jppdtf,reddit,AI slop imagery always begs the question: Is the content also AI slop?,2025-04-02 14:17:31,12,Xiol,programming
ml0yy37,1jppdtf,reddit,"""tutorials will hobble your learning"" says the guy whose blog looks to be mostly AI-generated",2025-04-02 14:17:18,15,vomitHatSteve,programming
ml0zq7s,1jppdtf,reddit,"The really sad fact is that people can imposter their way into jobs and keep them much more effective using ChatGPT and the likes.

I was pretty stunned when I was pair programming with a (junior) colleague, who initially showed potential as a dev, but now seemed to be unable to code without some form of hints or auto complete. He is using AI tools all.the.time and his regression is showing. 

So, if you want to hone your craft, besides closing those tutorial tabs, close your chatgpt session.",2025-04-02 14:21:19,6,mohragk,programming
ml0xj3x,1jppdtf,reddit,">You’ll hate it. You’ll want to quit. And somewhere in that struggle, you’ll discover what real coding feels like


Spot on",2025-04-02 14:09:56,3,WalterPecky,programming
mkz7s00,1jpgoly,reddit,"CORS is not a security feature. The same-origin policy is the security feature:


https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy 


CORS is a method to relax the SOP by letting the server tell the client ""it's ok for you to let the user read the response to this action"". ",2025-04-02 05:01:16,12,fiskfisk,programming
mkz7kb4,1jpgoly,reddit,Annoying bc I’m dumb,2025-04-02 04:59:21,6,masterchief0587,programming
mkz99jw,1jpgoly,reddit,CORS is just a way to piss me off.,2025-04-02 05:14:18,3,AM_Dog_IRL,programming
mkzcye5,1jpgoly,reddit,"CORS does not apply for ""simple"" POST requests. I.e. it has nothing to do with CSRF there.",2025-04-02 05:48:22,1,tonydocent,programming
mkzay6i,1jpgoly,reddit,"You sweet summer child.  I welcome you to web programming.  Welcome to your nightmare anytime you try to use a javascript service from a server hosted on a different domain.

Hackers ruined that for us and now we need special rules and shit in .htaccess files and nginx configurations to allow ourselves to use the APIs we've written for ourselves.

It's twisted, but it's our reality.  We can't have nuthin nice.

If you have a specific issue/error in your javascript console, ask us.  We can prob help.  You probably need to add some exceptions or rules to your web server to allow CORS from very specific IPs.",2025-04-02 05:29:13,0,stay_fr0sty,programming
mkv36bk,1jowwd9,reddit,"This whole ""vibe coding"" stuff smells a lot like the ""visual programming"" crazes of the 1980s and 1990s, and the ""human-language-like programming languages"" idea that pops up every other decade or so (and has given us cherished pearls of programming history such as COBOL, SQL, and BASIC).

These all followed the same pattern:

- Coding is hard.
- If we could come up with a programming environment where people can just write what they want, in some intuitive, user-friendly way, they could build software without needing to learn programming!
- So we make such an environment. It looks great - instead of writing unreadable garbage such as `int main(int argc, char **argv) { printf(""%s\n"", (argc >= 1) ? argv[0] : ""-- no arguments given --""); }`, we can write something like `PRINT ARGUMENT 1 IF EXISTS ELSE PRINT ""-- no arguments given --""`. Awesome.
- We roll out the environment, with selling points such as ""with this thing, you can make software without learning to code"".
- People start using it. At first, it's only used for simple tasks, but over time, the problems it is applied to become more and more complex.
- The non-programmer people using the ""user friendly"" platform realize, sooner or later, that they are in over their heads, that despite the intuitive interface, solving problems with it in a way that actually works reliably is still incredibly hard.
- Experts get called in, people who specialize in building stuff that actually works reliably on the platform in question.
- It turns out that those experts are effectively programmers - they take fuzzy requirements as expressed by non-technical humans, and translate them into something that will make a computer do what the non-technical humans want.

In the best case scenarios (e.g., SQL), the ""user friendly"" interface is actually a good enough abstraction to pull its weight and make programmers more productive (but they're still fundamentally doing the same thing, just at a higher abstraction level); in less great scenarios (e.g., Excel), the ""user friendly"" interface quickly turns into a burden that creates more problems than it solves.

And that's where I see this whole ""vibe coding"" thing going.

A nontechnical person can produce a simple Excel sheet, and it will work - e.g., something like a simple double-entry accounting sheet; the same person can prompt an LLM to produce something like a ""TO DO list"" app that actually works. But as the complexity grows, that Excel sheet, or the prompts going into the LLM, experience a complexity explosion, and sooner or later, the Excel sheet and the prompt grow as complicated as just writing the code in the first place would have been - if not worse. What use is ""vibe coding"" when you spend more time explaining to the LLM what you want as it would have taken to just write the thing yourself, and then ending up with something you don't even understand?",2025-04-01 14:46:05,7,tdammers,programming
mkj6b8f,1jnegmy,reddit,"My takeaway from the article: instead of refactoring call sites after changing a function's signature, we should write migrations that automatically migrate the old function to the new function. So something like '(a: int) -> void' when changed to '(a: optional<int>) -> void' should insert an unwrap within the function automatically

My take: this isn't really something a compiler should concern itself with. The job of a compiler is to translate your code (as is) to machine code. This may make sense for a language server but even then, the benefit isn't worth the cost of learning how to do it in the IDE",2025-03-30 15:37:46,9,mungaihaha,programming
mkj7f79,1jnegmy,reddit,Seems like the author has heard of migrations but has never actually had to use them before.,2025-03-30 15:43:30,3,Cryowatt,programming
mkp7qxh,1jnegmy,reddit,"The author used Haskell which does have pretty heavy type inference but usually you annotate as well as it is mostly nominal.

OCaml this done less often as well it is has more structural typing. Furthermore OCaml has functors and first class modules.

In a structural typed language (which SQL mostly is) particularly with type inference you can change the types all you want so long as they respect what you do with them. e.g. sort of like duck typing and or what Golang does.

I'm not saying it is as equivalent what the author is proposing but the macro like recommendation I think can be done to some extent with OCamls module system.",2025-03-31 15:32:19,2,agentoutlier,programming
mkj6o7b,1jnegmy,reddit,Isn't this solved by the magic of recompilation?,2025-03-30 15:39:38,2,zhivago,programming
mkmh0e6,1jnegmy,reddit,"This sounds like a recipe for ""spooky action at a distance"".  When you're reading old code, you won't know if that's the code that's _actually_ running, or if it's actually running some migrated version of it instead.",2025-03-31 02:35:01,1,falconfetus8,programming
moe3rs1,1k4znic,reddit,"> Question: How to Retrieve a Value From an Async Function Within the Global Scope?

Are....you serious? What is this AI crap",2025-04-22 06:44:37,6,sshwifty,programming
moe5m6w,1k4znic,reddit,"lol they even use .at to access negative indices, which you could just use… instead of wrapping it in a proxy like a crazy person.

This should be a joke, but it’s just trash",2025-04-22 07:03:30,3,pampuliopampam,programming
mnqeion,1k20xf6,reddit,"It's not ""here"", it's still in alpha, then will come the beta, then the release candidates, and finally it will be released in September, like all Python releases since it's now planned on a yearly schedule. 

There are always PEP to tell you when a Python version will come out: [https://peps.python.org/pep-0745/](https://peps.python.org/pep-0745/)

All the changes can be altered until the RC.",2025-04-18 09:45:26,37,alicedu06,programming
mnqeca2,1k20xf6,reddit,[deleted],2025-04-18 09:43:40,13,N/A,programming
mnqgdgm,1k20xf6,reddit,Last autumn I read that the GIL will be disabled by default in Python 3.14. Is that still the case? Or was I misinformed?,2025-04-18 10:04:00,2,andrerav,programming
mn8n64c,1jztadg,reddit,Thanks chatgpt. You got it in one.,2025-04-15 14:35:05,7,s-mores,programming
mn8s6lb,1jztadg,reddit,"Ok, nice to know",2025-04-15 15:00:13,2,JebusdeMazaret,programming
mn8nraz,1jztadg,reddit,"""interpreted language"" is just gibberish, which I guess is the real point of the article.

Interpretation and compilation are just implementation strategies.",2025-04-15 14:38:02,1,zhivago,programming
mm0mabb,1jub24x,reddit,"The main thing is the ability to choose tasks. If you can afford to choose tasks that take little time but give a big profit, you are a 10x engineer. The rest will be ordinary compared to you.",2025-04-08 11:27:02,3,YahenP,programming
mm0lulz,1jub24x,reddit,"You forgot:

- born in a upper mid level class family
- studied top college in the usa

It is not a game of how much you produce but how much you sell yourself and your power of influencing others to work for you.

Life is a lottery that depends on how lucky you were to be born from good parents. The better your parents understanding of the world the easier it is for you to become successful.",2025-04-08 11:23:36,5,Positive_Method3022,programming
mm0mm9a,1jub24x,reddit,"One of the biggest things I ever did to a more senior engineer was to infiltrate his baby project to fix a bug much smaller than the one he was busy on, but important to my team, figure it out, fix it and then finally, force code reviews on the repo.

No more magic fixes with no accountancy or explaining it before it is fixed.",2025-04-08 11:29:37,1,StevenXSG,programming
mlx5s6s,1jtucwh,reddit,What makes a tech stack honest? Have other stacks been lying?,2025-04-07 20:16:52,6,dcabines,programming
mlx9gyh,1jtucwh,reddit,Are you asking if people have heard of Linux or MacOS? Is this a joke?,2025-04-07 20:35:40,2,Adventurous-Rent-674,programming
mki2pan,1jn7txy,reddit,"Imagine if a Junior Software Engineer came into a company, wrote a bunch of shit, repetitive, unmaintainable, non-DRY, buggy, spaghetti-code, which would break the prod server if deployed unchanged, and has a high chance of having glaring security issues that could bankrupt the company.

And then, when called out for it, that Junior tries to excuse his fucking up with *""Well, your documentation is not good enough for me to do a good job, so its really your fault my work is so bad, and you should change how you work to make my life easier.""*

How well would you say would that excuse be received?",2025-03-30 11:17:34,7,Big_Combination9890,programming
mkjyadt,1jn7txy,reddit,"This article is rubbish and a thinly veiled ad for OP's AI-oriented documentation system. It's literally just ""Do *good* things, and *don't* do *bad* things 🤗"" with a focus on documentation. The only things it actually *says* about documentation are shallow and obvious --

* Key information should not be buried in issue comments.
* Documentation should be precise.
* Everything should be kept up to date.
* Everything should be easy to find.

-- and the only things it even says about AI-focused documentation is that it should additionally be in a structured format. Otherwise, it's just 80% fluff -- no substance; just padding for word count in a bad attempt at making it less obvious that the article only exists to link to OP's AI service.",2025-03-30 18:00:48,5,DavidJCobb,programming
mkk1yz0,1jn7txy,reddit,"While I understand your frustration with articles that seem overly simplistic, I believe there are important nuances in AI documentation that go beyond general principles.

Traditional documentation is optimized for human readers who can infer context, while documentation for AI systems requires a fundamentally different approach. It's not just about structure, but about contextual completeness.

For example, adequate documentation for humans might omit details about standard industry patterns, assuming prior knowledge. With AI, those omissions result in generic implementations that ignore the subtleties of your codebase.

I've been working on AI projects for years, and the difference between ""obvious"" documentation and effective AI documentation isn't in the principles (which certainly sound obvious), but in the meticulous execution that recognizes how AIs interpret and utilize that context.

The criticism of the article's format is valid - many development contents have become predictable formulas with little technical depth. But I don't think we should dismiss the entire subject because of it, especially when we're just beginning to develop good practices in this area.",2025-03-30 18:19:27,1,traderprof,programming
mkiwfn7,1jn7txy,reddit,"Thanks for the comments! Let me address both perspectives:

@Big_Combination9890 - That's a fair analogy, but I think it misses a key distinction. We don't expect junior engineers to work without proper documentation and context, which is why we have onboarding, code reviews, and mentorship. The issue isn't about making excuses for poor output, but rather acknowledging that *any* intelligence (human or artificial) needs proper context to produce quality work.

In my 15+ years building digital products, I've observed that the most successful teams invest heavily in knowledge management and contextual documentation. This isn't about lowering standards - it's about providing the right environment for success. Even senior engineers struggle when they lack proper context about system architecture, business requirements, and existing patterns.

@aJenDuh - Great question! The system is specifically designed for real-world, messy dependencies. We've tested it across multiple production codebases with complex dependency graphs, legacy code sections, and multi-repository architectures.

The key difference from toy examples is how we handle contextual relationships between components. Instead of just passing file contents, the system builds a contextual map of how different components relate to each other - similar to how an experienced developer builds a mental model of a system while working on it.

We've found particularly good results when dealing with challenges like:
- Cross-service dependencies in microservice architectures
- Framework-specific patterns that aren't explicitly documented
- Integration with third-party APIs and libraries

Happy to share more specific examples if you're interested!",2025-03-30 14:44:42,0,traderprof,programming
mo9hnsx,1k4em69,reddit,"This post reads like two strawmen made love, had a baby, and that baby became a poster child.",2025-04-21 14:38:40,7,redactedbits,programming
mmzqyse,1jyn3rj,reddit,"‘Terminals are scary.’

First point. If you can’t deal with the basics of the command line you made a poor career choice.",2025-04-14 01:32:48,15,ZogemWho,programming
mmzqy5q,1jyn3rj,reddit,"Soooo...  I should use Emacs as my terminal emulator?

If I am using processes that think they are talking to a terminal, and I am using software that takes the output from those processes and handles displaying it in a way that emulates the behavior of a terminal...  I think you are just talking about a very idiosyncratic terminal emulator.",2025-04-14 01:32:41,5,wrosecrans,programming
mmzq7n8,1jyn3rj,reddit,Doesn't emacs itself run in the terminal?,2025-04-14 01:27:50,3,Steampunkery,programming
mmzrhps,1jyn3rj,reddit,Yes I do.,2025-04-14 01:36:14,2,sludgeriffs,programming
mmztj2g,1jyn3rj,reddit,"Counterpoint: I don't need Emacs. Seems like one of those things that you're either all-in on, or it's not worth the time...and I've bounced off Emacs a handful of times.

I've had some coworkers who were wizards with it, though. Although, that was like 10-15 years ago.",2025-04-14 01:49:31,1,khedoros,programming
mmzx9sl,1jyn3rj,reddit,"I’ve never met one person that got familiar with vim and then learned emacs or vice/versa.

Edit: this is anecdotal exaggeration. I realize people do this, but the article implies it’s a common path to go from vim to emacs and that’s just not true.",2025-04-14 02:14:15,1,Person-12321,programming
mn0ooha,1jyn3rj,reddit,"I need 10, actually, and that's what my .screenrc helps me spin up every fresh session. What I don't need is Emacs.",2025-04-14 05:52:15,1,spotter,programming
mn0shwc,1jyn3rj,reddit,"What Andrey is saying makes a lot of sense to me. For a long time, I've been using emacs in one window and a bunch terminals in tabs in a second window. But then I started using `async-shell-command` and I like it better for most things. It runs a command in another emacs window and then I can easily search and navigate around and save since it's just a normal buffer. I only use a terminal now for the random command that requires a terminal emulator.",2025-04-14 06:29:50,1,adamard,programming
